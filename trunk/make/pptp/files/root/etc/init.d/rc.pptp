#!/bin/sh

export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/mod/sbin:/mod/bin:/mod/usr/sbin:/mod/usr/bin
export LD_LIBRARY_PATH=/mod/lib

DAEMON=pptp
PPPD=pppd

case "$1" in
	""|load|start|restart)
		if [ ! -r "/mod/etc/conf/$DAEMON.cfg" ]; then
			echo "Error[$DAEMON]: not configured" 1>&2
			exit 1
		fi

		. /mod/etc/conf/$DAEMON.cfg
		;;
esac

start() {
	[ ! -e "/mod/etc/ppp/options.pptp" ] && /etc/default.${DAEMON}/pptp_options > /mod/etc/ppp/options.pptp
	[ ! -e "/mod/etc/ppp/peers/pptp" ] && /etc/default.${DAEMON}/pptp_peer > /mod/etc/ppp/peers/pptp
	
	echo -n 'Starting pptp ...'
	set -o noglob
	modprobe ppp_async
	$PPPD call pptp $PPTP_OPTIONS
	exitval=$?
	if [ "$exitval" -eq 0 ]; then
		echo 'done.'
	else
		echo 'failed.'
		exit $exitval
	fi
}

stop() {
	echo -n 'Stopping pptp ...'
	rmmod ppp_async
	rmmod ppp_generic
	rmmod slhc
	rmmod crc_ccitt
	killall $PPPD > /dev/null 2>&1
	exitval=$?
	if [ "$exitval" -eq 0 ]; then
		echo 'done.'
	else
		echo 'failed.'
		exit $exitval
	fi
}

case "$1" in
	""|load)
		[ ! -d "/tmp/flash/ppp" ] && mkdir -p /tmp/flash/ppp/peers
		[ ! -d "/mod/etc/ppp/peers" ] && mkdir -p /mod/etc/ppp/peers
		[ -e "/tmp/flash/ppp/options.pptp" ] && ln -s /tmp/flash/ppp/options.pptp /mod/etc/ppp/options.pptp
		[ -e "/tmp/flash/ppp/peers/pptp" ] && ln -s /tmp/flash/ppp/peers/pptp /mod/etc/ppp/peers/pptp

		modreg cgi 'pptp' 'PPTP'

		deffile='/mod/etc/default.pptp/pptp_options.def'
		[ -r "/tmp/flash/pptp_options.def" ] && deffile='/tmp/flash/pptp_options.def'
		modreg file 'pptp_options' 'PPTP: options.pptp' 0 "$deffile"

		deffile='/mod/etc/default.pptp/pptp_peer.def'
		[ -r "/tmp/flash/pptp_peer.def" ] && deffile='/tmp/flash/pptp_peer.def'
		modreg file 'pptp_peer' 'PPTP: peer config' 0 "$deffile"
		
		if [ "$PPTP_ENABLED" != "yes" ]; then
			echo "$DAEMON is disabled" 1>&2
			exit 1;
		fi

		start
		;;
	unload)
		stop
		modunreg cgi 'pptp'
		modunreg file 'pptp_options'
		modunreg file 'pptp_peer'
		;;
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		sleep 1
		start
		;;
	status)
		if [ -z "$(pidof "$PPPD")" ]; then
			echo 'stopped'
		else
			echo 'running'
		fi
		;;
	*)
		echo "Usage: $0 [load|unload|start|stop|restart|status]" 1>&2
		exit 1
		;;
esac

exit 0
