#!/bin/sh

[ -r /mod/etc/conf/mod.cfg ] && . /mod/etc/conf/mod.cfg

# Global result
IP=""

helpmsg() {
cat << EOF
get_ip - determine external IP address"

Usage: $0 [option]
    -a, --all      - use all methods (order: dsld, webcm, extquery, ostat) [recommended]
    -d, --dsld     - use showdsldstat method (use only with kernel 2.6 firmwares)
    -e, --extquery - use external site query method (checkip.dyndns.org)
    -o, --ostat    - use onlinestat method (since firmware 04.87)
    -w, --webcm    - use webcm CGI handler / ctlmgr_ctl method
    -?, --help     - print this help message

  current default method: $MOD_GET_IP_METHOD

EOF
}

# Detect private (RFC 1918) or link-local (RFC 5735) IPs
ip_private()
{
	local ip=$1
	# 10.0.0.0/8 (private), 192.168.0.0/16 (private), 169.254.0.0/16 (link-local)
	(
		[ "$ip" != "${ip#10.}" ] ||
		[ "$ip" != "${ip#192.168.}" ] ||
		[ "$ip" != "${ip#169.254.}" ]
	) && return 0
	# 172.16.0.0/12 (private)
	[ "$ip" == "${ip#172.}" ] && return 1
	ip=$(echo $ip | cut -d '.' -f 2)
	[ $ip -ge 16  ] && [ $ip -le 31 ] && return 0
	return 1
}

via_dsld() {
	IP="$(/sbin/showdsldstat 2>/dev/null | sed -nr 's/0: ip ([0-9.]+).*/\1/p')"
	[ -n "$IP" ] && return 0
	return 1
}

via_extquery() {
	# Read cache file (max. age 1 minute)
	IP=$(find /tmp/ -name get_ip.cache -maxdepth 1 -mmin 0 -exec cat {} ';')
	[ -n "$IP" ] && return 0
	# If supported by wget(-gnu), don't wait forever
	SHORTWAIT="-t 1"
	if which wget-gnu >/dev/null; then
		WGET="wget-gnu $SHORTWAIT"
	else
		wget --version >/dev/null 2>&1 && WGET="wget $SHORTWAIT" || WGET="wget"
	fi
	# Get IP from external web site, max. 3 tries
	for turn in 1 2 3; do
		IP="$($WGET -T 30 -q -O - http://checkip.dyndns.org | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+')"
		if [ $? -eq 0 ] && [ -n "$IP" ]; then
			echo "$IP" > /tmp/get_ip.cache
			return 0
		fi
	done
	return 1
}

via_ostat() {
	IP="$(cat /var/run/onlinestat 2>/dev/null | sed -rn 's!^IPADDR ([0-9.]+)!\1!p')"
	[ -n "$IP" ] && return
	return 1
}

via_webcm() {
	local queryfile="/usr/www/all/html/query.txt"
	local querystring=""
	if which ctlmgr_ctl >/dev/null; then
		IP=$(ctlmgr_ctl r connection0 pppoe:status/ip)
	else
		if [ "$(sed -ne '/var:n\[/p' $queryfile)" != "" ]; then
			querystring="var:n[0]=connection0:pppoe:status/ip"
		else
			querystring="var:cnt=1&var:n0=connection0:pppoe:status/ip"
		fi
		IP="$(/usr/www/html/cgi-bin/webcm "getpage=${queryfile}&${querystring}")"
	fi
	# ctlmgr_ctl return values [box=val]: 7170=176, 7270=177, 7141=172
	# Caveat: must use "-o" instead of "||", otherwise "$?" would be reset
	[ $? -eq 0 -o $? -ge 170 ] && return 0
	return 1
}

# Set user-defined method (e.g. via web UI) if no argument is given
[ $# -eq 0 ] && get_method="$MOD_GET_IP_METHOD" || get_method="$1"

case $get_method in
	-a|--all|"")
		for mode in dsld webcm extquery ostat; do
			via_$mode
			[ $? -eq 0 ] && ! ip_private "$IP" && break
		done
		;;
	-d|--dsld)
		via_dsld
		;;
	-e|--extquery)
		via_extquery
		;;
	-o|--ostat)
		via_ostat
		;;
	-w|--webcm)
		via_webcm
		;;
	-?|-h|--help)
		helpmsg
		exit 0
		;;
	*)
		helpmsg >&2
		exit 1
		;;
esac

if [ $? -eq 0 ] && ! ip_private "$IP"; then
	echo "$IP"
	exit 0
else
	echo "get_ip error" >&2
	exit 1
fi
