#!/bin/sh
#
# Usage: modinetd [package]

icnf="/var/mod/etc/inetd.conf"
touch $icnf

usage() {
	echo "Usage: $(basename $0) [options] [package]..."
	echo "options:"
	echo "  -h | --help       - print this help"
	exit $1
}

inetd_conf_line() {
	line="$inetdcfg_port\t$inetdcfg_sock\t$inetdcfg_proto\t$inetdcfg_flags"
	line="$line\t$inetdcfg_user\t$inetdcfg_exe\t$inetdcfg_arg0 $inetdcfg_args"
	[ "$1" = escape ] && line=$(echo -n "$line" | sed -e 's@/@\\/@g')
	echo -en "$line"
}

update_inetd() {
	local pkg_path=$1
	local pkg_subd=$(echo $pkg_path | sed -e 's@^/etc/default\.[^/]*/\([^/]*\)\.inetd$@\1@')
	local pkg_name=$(echo $pkg_path | sed -e 's@^/etc/default\.\([^/]*\)/[^/]*\.inetd$@\1@')
	if [ ! -e "/etc/init.d/rc.$pkg_name" ]; then
		error "package $pkg_name has no rc script"
		exit 1
	fi
	echo -n "Updating inetd config for $pkg_name"
	. $pkg_path

	if [ "$pkg_name" != "$pkg_subd" ]; then
		sub_status=$(/etc/init.d/rc.$pkg_name status_$pkg_subd)
		echo -n " ($pkg_subd)"
		pkg_inetd=${pkg_name}_$pkg_subd
	else
		sub_status=
		pkg_inetd=$pkg_name
	fi
	echo -n ": "

	if ! grep -q "#:$pkg_inetd:" $icnf; then
		echo >> $icnf
		echo "#:$pkg_inetd: $inetdcfg_desc" >> $icnf
		echo "$(inetd_conf_line)" >> $icnf
	fi

	if [ "inetd" == "$(/etc/init.d/rc.$pkg_name status)" -o "inetd" == "$sub_status" ]; then
		sed -i -e "/#:$pkg_inetd:/ { n; s/^.*/$(inetd_conf_line escape)/ }" $icnf
		echo "active."
	else
		sed -i -e "/#:$pkg_inetd:/ { n; s/^[^#].*/#<off>#$(inetd_conf_line escape)/ }" $icnf
		echo "inactive."
	fi
}

update_inetd_avm() {
	local pkg_file=$1
	local pkg_name=$(echo $pkg_file | sed 's/^.*\///;s/\.inetd$//')
	local pkg_desc="#:AVM-$pkg_name: AVM $pkg_name daemon"
	echo -n "Updating inetd config for AVM $pkg_name: "
	if [ -e $pkg_file ]; then
		if ! grep -q "^$pkg_desc$" $icnf; then
			echo >> $icnf
			echo "$pkg_desc" >> $icnf
			cat $pkg_file >> $icnf
		fi
		echo "active."
	else
		sed -i -e "N;/$pkg_desc/b1;b;:1 N;d" $icnf
		echo "inactive."
	fi
}

error() {
	echo "$0: $*" 1>&2
}

TEMP=$(getopt -o h --long help -n "$(basename $0)" -- "$@")

[ $? == 0 ] || usage 1
eval set -- "$TEMP"

while true; do
	case $1 in
		-h|--help) usage 0; shift ;;
		--) shift ; break ;;
		*) echo "Internal error!" ; exit 1 ;;
	esac
done

if [ $# -eq 0 ]; then
	echo 'Configuring inetd:'
	# Freetz packages
	for package in $(ls /etc/default.*/*.inetd); do
		update_inetd $package
	done
	# AVM packages
	for package in $(ls /var/mod/etc/inetd/*.inetd 2>/dev/null); do
		update_inetd_avm $package
	done
else
	for package; do
		package_short="$(echo $package|sed 's/AVM-//')"
		if [ "$package" == "$package_short" ]; then
			# Freetz packages
			package_main=$(ls /etc/default.$package/*.inetd 2>/dev/null)
			if [ -n "$package_main" ]; then
				for package_sub in $package_main; do
					update_inetd "$package_sub"
				done
			else
				error "package $package has no default inetd file"
			fi
		else
			# AVM packages
			update_inetd_avm /var/mod/etc/inetd/$package_short.inetd
		fi
	done

fi

# check if we could listen on socket
grep -vE "^$|^#" $icnf | while read line; do
	local cleanline="$(echo "$line" | sed 's/[[:space:]]*/ /g;s/^ //g')"
	local listener=$(echo "$cleanline" | cut -d " " -f1)
	local ip_proto=$(echo "$cleanline" | cut -d " " -f3)
	if [ "$(grep -E "$listener[[:space:]]*(stream|dgram|raw|seqpacket)[[:space:]]*$ip_proto" $icnf 2>/dev/null | wc -l)" -gt 1 ]; then
		echo -n "WARNING: inetd could not listen on '$listener/$ip_proto' multiple times: "
		grep "$line" -B1 $icnf | head -n1
	fi
done

exit 0
