#!/bin/sh

scriptname=$0
DAEMON=${scriptname##*/rc.}
. /etc/init.d/modlibrc

mypidof() {
	ps | grep $1 | grep /m[o]d/etc/${1}.conf | sed 's/^[ ]*//; s/\([0-9]*\)[ ].*/\1/' 
}

if [ ! -e /var/tmp/.openvpnfirstrun ]; then
	touch /var/tmp/.openvpnfirstrun
	/mod/etc/default.openvpn/openvpn_dynamic_conf
fi
[ -x /mod/sbin/$DAEMON ] || ln -s /usr/sbin/openvpn /mod/sbin/$DAEMON

case $1 in
	""|load|start|restart)
		modlib_addgroup openvpn
		modlib_adduser openvpn -G openvpn -s /bin/false -H -D -g "OpenVPN account"
		mkdir -p /tmp/openvpn/etc
		cp -f /etc/resolv.conf /tmp/openvpn/etc
		;;
esac

start() {
	if [ ! -e "/tmp/flash/static.key" ]; then
		echo "Creating static.key"
		openvpn --genkey --secret /tmp/flash/static.key
		/usr/bin/modsave flash
	fi
	
	if [ -x "/tmp/flash/${DAEMON}_conf" ]; then
		/tmp/flash/${DAEMON}_conf /mod/etc/${DAEMON}.conf
	else
		/mod/etc/default.${DAEMON}/${DAEMON}_conf /mod/etc/${DAEMON}.conf
	fi

	if [ -r "/tmp/flash/${DAEMON}.extra" ]; then
		cat /tmp/flash/${DAEMON}.extra >> /mod/etc/${DAEMON}.conf
	fi

	echo -n "Starting $DAEMON ... "

	$DAEMON --config /mod/etc/${DAEMON}.conf --writepid /var/run/${DAEMON}.pid
	exitval=$?
	if [ "$exitval" -eq 0 ]; then
		echo 'done.'
	else
		echo 'failed.'
		exit $exitval
	fi
	# if we have brctl, then try to add tap to "lan" if requestet (ignore errors)
	if [ $(which brctl) ] && TAP=$(grep "#Helperline" /mod/etc/${DAEMON}.conf | grep -o tap[0-9] ); then
		brctl addif lan $TAP 2> /dev/null 
	fi
}

stop() {
	
	if [ -n "$(mypidof $DAEMON)" ];then

		echo -n "Stopping ${DAEMON} ... "
		killall $DAEMON > /dev/null 2>&1
		exitval=$?

		if [ "$exitval" -eq 0 ]; then
			echo 'done.'
		else
			echo 'failed.'
			exit $exitval
		fi

	fi
	
	rm -f /mod/etc/${DAEMON}.conf
	rm -f /var/run/${DAEMON}.pid

}


case $1 in
	""|load)
		if [ "$DAEMON" = "openvpn" ]; then
			modreg cgi 'openvpn' 'OpenVPN'
			modreg file openvpn 'box_crt' 'OpenVPN: Box Cert' 0 "box_crt"
			modreg file openvpn 'box_key' 'OpenVPN: Private Key' 0 "box_key"
			modreg file openvpn 'ca_crt' 'OpenVPN: CA Cert' 0 "ca_crt"
			modreg file openvpn 'crl_pem' 'OpenVPN: CRL' 0 "crl_pem"
			modreg file openvpn 'dh_pem' 'OpenVPN: DH Param' 0 "dh_pem"
			modreg file openvpn 'static_key' 'OpenVPN: Static Key' 0 "static_key"
		fi
		d_BU="$DAEMON"
		as="${OPENVPN_AUTOSTART#*#}"
		for d in $(echo "openvpn${OPENVPN_CONFIG_NAMES#*DEFAULT#}" | sed 's/#/ openvpn_/g' ); do
			if [ "${as%%#*}" != "yes" ]; then
				echo "$d is disabled" 1>&2
			else 
				if [ -e "/var/run/$d.pid" ]; then
					echo "$d already started."
				else	
					DAEMON="$d"
					start
				fi
			fi
			as=${as#*#}
		done
		DAEMON="$d_BU"
		;;
	unload)
		stop
		if [ "$DAEMON" = "openvpn" ]; then
			modunreg file openvpn
			modunreg cgi openvpn
		fi
		;;
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		sleep 1
		start
		;;
	reload)
		if [ -r "/var/run/${DAEMON}.pid" ]; then
			kill -HUP $(cat /var/run/${DAEMON}.pid)
		fi
		;;
	status)
		if [ -z "$(mypidof $DAEMON)" ]; then
			echo 'stopped'
		else
			echo 'running'
		fi
		;;
	*)
		echo "Usage: $0 [load|unload|start|stop|restart|reload|status]" 1>&2
		exit 1
		;;

esac

exit 0
