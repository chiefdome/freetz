#!/bin/sh

. /etc/init.d/modlibrc
DAEMON=multid
DAEMON_LONG_NAME="AVM multid"
PID_FILE=/var/run/${DAEMON}.pid

TMPFILE_IGD=/tmp/.multid.igd
TMPFILE_NTP=/tmp/.multid.ntp

# include environment required for multid restart
[ -r /var/env.cache ] && . /var/env.cache

start() {
	echo -n "Starting ${DAEMON_LONG_NAME}..."

	if [ -e $TMPFILE_IGD ]; then
		DAEMON_CMD_IGD=$(cat $TMPFILE_IGD)
	else
		if [ ! -e "/sbin/igdd" -a ! -e "/sbin/upnpd" ]; then
		 	DAEMON_CMD_IGD="$(multid -? 2>&1 | grep "upnp" | sed 's/^[ \t]*//' | cut -c 1-3)"
		fi
		echo "$DAEMON_CMD_IGD" > $TMPFILE_IGD
	fi

	if [ -e $TMPFILE_NTP ]; then
		DAEMON_CMD_NTP=$(cat $TMPFILE_NTP)
	else
		if [ -e "/usr/sbin/ntpd" -o -e "/sbin/chronyd" ]; then
		 	DAEMON_CMD_NTP="$(multid -? 2>&1 | grep "NTP" | sed 's/^[ \t]*//' | cut -c 1-3 | sed 's/ //')"
		fi
		echo "$DAEMON_CMD_NTP" > $TMPFILE_NTP
	fi

	$DAEMON $DAEMON_CMD_IGD $DAEMON_CMD_NTP
	exitval=$?
	[ -f /tmp/flash/mod/multid.start ] && . /tmp/flash/mod/multid.start
	if [ "$exitval" -eq 0 ]; then
		echo 'done.'
	else
		echo 'failed.'
		exit $exitval
	fi
}

stop() {
	$DAEMON -s
}

ntp_mode() {
	DAEMON_CMD_NTP_OLD="$(cat $TMPFILE_NTP 2>/dev/null)"
	[ "$1" == "ntp_disable" ] && DAEMON_CMD_NTP_NEW="$(multid -? 2>&1 | grep "NTP" | sed 's/^[ \t]*//' | cut -c 1-3 | sed 's/ //')"
	if [ "$DAEMON_CMD_NTP_OLD" != "$DAEMON_CMD_NTP_NEW" ]; then
		echo "$DAEMON_CMD_NTP_NEW" > $TMPFILE_NTP
		[ "$(modlib_status)" != "stopped" ] && modlib_restart
	fi
}

case $1 in
	start)
		modlib_start
		;;
	stop)
		modlib_stop
		;;
	restart)
		modlib_restart
		;;
	status)
		modlib_status
		;;
	ntp_*)
		ntp_mode $1
		;;
	*)
		echo "Usage: $0 [start|stop|restart|status|ntp_enable|ntp_disable]" 1>&2
		exit 1
		;;
esac

exit 0
