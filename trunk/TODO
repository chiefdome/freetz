To-do list for ds26
===================

$Id$

- Make ccache build script aware of gcc version change (needs rebuild in that
  case)

- Open question: Why do we have libjpeg if it is not used by any package?
    Answer (by olistudent): SANE seems to need it, but the scanners do not run
    because AVM have not finished their USB driver yet. We should check new
    packages to see if they ever provide a working version.

- Experiment with and possibly use dietlibc to create smaller binaries by
  statically compiling in stuff usually dynamically linked to uClibc.

- Enhance Virtual-IP-CGI and Openntpd so it supports other (and possibly
  multiple) interfaces than lan:1
  (http://www.ip-phone-forum.de/showpost.php?p=886345)

- Make flash firmware button in dsmod webinterface (especially for W701V and
  W900 users because they can not flash over original webinterface)

- Do the same for source code patches as we have done for the firmware
  patches: give them a thorough auto-fix treatment similar to the new modpatch
  feature.

- ldd on the box would be nice to have as a debug-thingy
    Remark (by kriegaex): Yes, maybe. But why bloat box's memory if we can
    just as easy run toolchain/target/mipsel-linux-uclibc/bin/ldd on mipsel
    binaries from the target toolchain as tools/lib_report.sh does?
    Remark (by olistudent): In uclibc.mk there is a target named 
    uclibc-target-utils. This copies ldd for target to root/usr/bin.
    Remark (by kriegaex): I think we should offer an option under "debug
    tools" in menuconfig then. The file is really small and it works well,
    I tested it on the box. I do not know how this is best done, because it is
    part of the toolchain rather than a regular package, but maybe Oliver has
    an idea.

- Think about whether we can do something about LCR Auto Updater not working
  without httpd restart, if httpd replaces websrv.

- Make rc.mini_fo use kernel_args API

- Get "telnetd vs. getcons" hangups fixed in BusyBox or another way.

- Refactor Dnsmasq package, particularly rc.dnsmasq (full of logical mistakes!)
  and recently improved, but still suboptimal multid wrapper. The whole thing
  only (kind of) works as long as nobody thinks about using the scripts outside
  the init process. Otherwise they might work, but could also break. For
  example, the "start" action does not check if the package is activated at
  all. The "load" action does, but does not take care of starting multid anyway
  if Dnsmasq is deactivated. A few more strange things are in there, e.g. the
  misleading variable name "nomultid" which suggests there is an option to run
  Dnsmasq without multid. This is not true, the variable is just a flag which
  means something like "don't start/stop multid, I will take care of it
  myself". This is used in the restart action where the option keeps "stop" and
  "start" from restarting multid twice. Actually, I (kriegaex) do not feel so
  inclined to refactor those scripts myself. It took me a while to at least
  understand what they do and fix a few quoting bugs in the wrapper.