#!/bin/sh

export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/mod/sbin:/mod/bin:/mod/usr/sbin:/mod/usr/bin
export LD_LIBRARY_PATH=/mod/lib

DAEMON=inadyn

case "$1" in
	""|load|start|restart)
		if [ ! -r "/mod/etc/conf/$DAEMON.cfg" ]; then
			echo "Error[$DAEMON]: not configured" 1>&2
			exit 1
		fi

		. /mod/etc/conf/$DAEMON.cfg
		;;
esac

ivalueof () {
	eval "echo -n \$${1}${2}"
}

escvalue () {
	echo "$@" | sed 's,\([\ ]\),\\\1,g'
}

configure () {
	local ii value

	echo background
	echo verbose $INADYN_VERBOSE
	if [ -x /etc/init.d/rc.syslogd -a running = "$(/etc/init.d/rc.syslogd status)" ]; then
		echo syslog
	else
		echo log_file /var/log/inadyn.log
	fi
	echo pid_file /var/run/${DAEMON}.pid

	ii=0
	# inadyn -> dyndns.h can maintain maximal 5 servers
	while [ 5 -gt $ii ]; do
		if [ yes = "$(ivalueof INADYN_ACTIVE $ii)" ]; then

			value=$(ivalueof INADYN_URL $ii | sed 's,\([^/]*\)\(.*\),\1 \2,')
			case "$(ivalueof INADYN_SERVICE $ii)" in
				dyndns.org)
					echo -e '\ndyndns_system dyndns@dyndns.org'
					;;
				dyndns.org-statdns)
					echo -e '\ndyndns_system statdns@dyndns.org'
					;;
				dyndns.org-custom)
					echo -e '\ndyndns_system custom@dyndns.org'
					;;
				afraid.org)
					echo -e '\ndyndns_system default@freedns.afraid.org'
					;;
				zoneedit.com)
					echo -e '\ndyndns_system default@zoneedit.com'
					;;
				no-ip.com)
					echo -e '\ndyndns_system default@no-ip.com'
					;;
				custom|benutzerdefiniert)
					[ -z "$value" ] && continue
					echo -e '\ndyndns_system custom@http_svr_basic_auth'
					;;
			esac

			if [ -n "$value" ]; then
				echo dyndns_server_name $(echo $value | cut -d\  -f1)
				echo dyndns_server_url $(echo $value | cut -d\  -f2)
			fi

			value=$(ivalueof INADYN_USER $ii)
			[ -n "$value" ] && echo "username $value"
			value="$(ivalueof INADYN_PASS $ii)"
			[ -n "$value" ] && echo "password $(escvalue $value)"
			for value in $(ivalueof INADYN_ALIAS $ii); do
				echo "alias $value"
			done
			value=$(ivalueof INADYN_OPTIONS $ii)
			[ -n "$value" ] && echo "$value"
		fi
		let ii++
	done
}

start() {
	echo -n 'Starting Inadyn Client ...'

	configure >/mod/etc/inadyn.conf
	if [ 5 -gt `cat /mod/etc/inadyn.conf | wc -l` ]; then
		echo -n 'failed: not configured.' >&2
		exit 1
	fi

	$DAEMON --input_file /mod/etc/inadyn.conf >/dev/null 2>&1
	exitval=$?
	if [ "$exitval" -eq 0 ]; then
		echo 'done.'
	else
		echo 'daemon failed.'
		exit $exitval
	fi
}

stop() {
	echo -n 'Stopping Inadyn ...'

	kill "$(cat /var/run/$DAEMON.pid)" > /dev/null 2>&1
	
	if [ "$exitval" -eq 0 ]; then
		rm -f /var/run/$DAEMON.pid > /dev/null 2>&1
		echo 'done.'
	else
		echo 'failed.'
		exit $exitval
	fi
}

case "$1" in
	""|load)

		if type modreg > /dev/null; then
			modreg cgi $DAEMON 'Inadyn'
		fi

		if [ "$INADYN_ENABLED" != "yes" ]; then
			echo "$DAEMON is disabled" 1>&2
			exit 1;
		fi

		if [ -s "/var/run/$DAEMON.pid" ]; then
			echo "$DAEMON already started."
		else
			start
		fi
		;;
	unload)
		stop
		modunreg cgi $DAEMON
		;;
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		sleep 1
		start
		;;
	status)
		if [ ! -s "/var/run/$DAEMON.pid" ]; then
			echo 'stopped'
		else
			echo 'running'
		fi
		;;
	*)
		echo "Usage: $0 [load|unload|start|stop|restart|status]" 1>&2
		exit 1
		;;
esac

exit 0
