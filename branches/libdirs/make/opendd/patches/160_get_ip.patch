--- opendd.c.orig	2010-09-17 21:10:03.000000000 +0200
+++ opendd.c	2010-09-17 21:10:05.000000000 +0200
@@ -519,6 +519,16 @@
   return 0;
 }
 
+int is_valid_ip(const char *ip_str)
+{
+        unsigned int n1,n2,n3,n4;
+
+        if(sscanf(ip_str,"%u.%u.%u.%u", &n1, &n2, &n3, &n4) != 4) return 0;
+
+        if((n1 <= 255) && (n2 <= 255) && (n3 <= 255) && (n4 <= 255)) return 1;
+        return 0;
+}
+
 int getifaceaddr(char **ip) {
 /* -----------------------------------------------------------------------------
  * Get IP address from interface name, from config file
@@ -527,32 +537,29 @@
  * @return int
  * -------------------------------------------------------------------------- */
  
-  option_type type;
   void *value = NULL;
-  struct sockaddr addr;
   
-  /* iface (mandatory) */
-  /* Get my IP from an interface */
-  value = get_option("iface", &type);
-  if (value == NULL) {
-    logmsg(LOG_ERR, "dyndns() : \"iface\" is mandatory !");
-    return 0;
-  }
-  switch(type) {
-  case OPTION_STRING:     
-    if (getaddrbyif((const char *)value, &addr)) {
-      *ip = strdup(inet_ntoa(((struct sockaddr_in *)&addr)->sin_addr));
+  struct sockaddr_in addr;
+  FILE *file;
+  char buffer[16];
+
+  /* Get my IP from an /tmp/.opendd.ip */
+  file = fopen("/tmp/.opendd.ip", "r");
+  if (NULL == file) {
+    logmsg(LOG_ERR, "dyndns() : Can't read external IP file!");
+    return 0;
+  }
+  fgets(buffer, 15, file);
+  fclose (file);
+  file = NULL;
+  inet_aton(buffer, &addr.sin_addr);
+  if (is_valid_ip(buffer)) {
+    *ip = strdup(inet_ntoa(addr.sin_addr));
       if (*ip != NULL) {
         return 1;
       }
     }
-    else
-      logmsg(LOG_ERR, "dyndns() : Cannot find interface %s", (const char *)value);
-    break;
-  default:
-    logmsg(LOG_ERR, "dyndns() : \"iface\" is not a valid option !");
-    break;    
-  }
+  logmsg(LOG_ERR, "dyndns() : Can't determine external IP!");
   return 0;
 }
 
