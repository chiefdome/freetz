#!/bin/sh
#
# Register scripts/files/options for the freetz web interface
#
# Usage: modreg cgi <pkg> <title>
#        modreg extra <pkg> <title> <sec-level> <cgi-name>
#        modreg file <pkg> <id> <title> <sec-level> <desc-file>
#        modreg status <pkg> <title> [<cgi-name>]
#        modreg daemon [--disable] [--hide] [--rc-script <script>] [--name <description>] [--package <pkg>] <daemon>

replace() {
	local regexp=$1 file=$2 data=$3
	[ -e "$file" ] || touch "$file"

	local content=$(grep -v "$regexp" "$file")
	( echo "$data"; echo -n "$content" ) | sort > "$file"
}

usage() {
	echo "Usage: $1 cgi <pkg> <title>" 1>&2
	echo "       $1 extra <pkg> <title> <sec-level> <cgi-name>" 1>&2
	echo "       $1 file <pkg> <id> <title> <sec-level> <desc-file>" 1>&2
	echo "       $1 status <pkg> <title> [<cgi-name>]" 1>&2
	echo "       $1 daemon [-d|--disable] [-h|--hide] [-r|--rc-script=<script>] [-n|--name=<description>] [-p|--package=<pkg>] <daemon>" 1>&2
	exit 1
}

PAGE_REG=/mod/etc/reg/page.reg
page_new() {
	local type=$1 pkg=$2 id=$3
	[ -e "$PAGE_REG" ] || touch "$PAGE_REG"

	if grep -q "^$pkg|$id|" "$PAGE_REG"; then
		return 1
	fi
	replace "^$pkg|$id|" "$PAGE_REG" "$pkg|$id|$type"
	return 0
}

TYPE=$1

unset -v PKG ID TITLE
case $TYPE in
	cgi)    PKG=$2; ID=main; TITLE=$3 ;;
	extra)  PKG=$2; ID=$5; TITLE=$3 ;;
	file)   PKG=$2; ID=$3; TITLE=$4 ;;
	status) PKG=$2; ID=${4:-status}; TITLE=$3 ;;
esac

case $TYPE in
	cgi|extra|file|status)
		if ! page_new "$TYPE" "$PKG" "$ID"; then
			echo "Error: Page $PKG/$ID has already been registered: $(grep "^$PKG|$ID|" "$PAGE_REG")" >&2
			exit 1
		fi
		;;
esac

#
# For 'extra' and 'status', <cgi-name> is relative to
# /mod/usr/lib/cgi-bin/$PKG/ and without the .cgi extension!
#

case $TYPE in
	cgi)
		replace "^$PKG|" /mod/etc/reg/cgi.reg "$PKG|$TITLE"
		rm -f /mod/var/cache/menu_packages
		touch /mod/var/cache/menu.stale
		;;
	extra)
		replace "^$PKG|.*|$ID\$" /mod/etc/reg/extra.reg "$PKG|$TITLE|$4|$ID"
		rm -f /mod/var/cache/extras
		;;
	file)
		if [ $# -lt 6 ]; then
			echo "Error: $0 $TYPE $2: Registration without <pkg> argument is deprecated. Please switch to the new style. See /usr/bin/modreg for more details." >&2
			exit 1
		else
			sec_level=$5 desc=$6
#
# With the new style of registering files, each file is associated with a
# package explicitly. Hence, $id needs only be unique within a package.
#
# This style has the following advantages:
#  1. All files of a package can be unregistered at once: modunreg file "$pkg"
#  2. Files may be grouped/associated with a package in the Web interface
#     (not done yet)
#  3. We can derive the default locations of the description files:
#     /mod/etc/default.$pkg/ and /tmp/flash/$pkg/
#
# If $desc is an absolute path it is taken as it is (previous behaviour).
# A relative path chooses from the default description file or the
# overriding version at the standard locations. The resulting path is stored.
#
# For the time being, $title may include a human-readable package name. Later,
# this information ought to be retrieved from a package registration file.
#
			case $desc in
			    /*) deffile=$desc ;;
			    *)
				deffile="/tmp/flash/$PKG/$desc.def"
				if [ ! -r "$deffile" ]; then
				    deffile="/mod/etc/default.$PKG/$desc.def"
				fi
				;;
			esac
			replace "^$PKG|$ID|" /mod/etc/reg/file.reg "$PKG|$ID|$TITLE|$sec_level|$deffile"
		fi
		rm -f /mod/var/cache/menu_settings
		touch /mod/var/cache/menu.stale
		;;
	status)
		replace "^$PKG|.*|$ID\$" /mod/etc/reg/status.reg "$PKG|$TITLE|$ID"
		rm -f /mod/var/cache/menu_status
		touch /mod/var/cache/menu.stale
		;;
	daemon)
		filename=$0
		shift
		TEMP=$(getopt -o dhn:r:p: --long disable,hide,name:,rc-script:package: -n "$(basename $filename)" -- "$@")

		disable=false
		hide=false
		description=
		package=
		[ $? == 0 ] || usage $filename
		eval set -- "$TEMP"

		while true; do
			case $1 in
				-d|--disable) disable=true; shift ;;
				-h|--hide)	hide=true; shift ;;
				-n|--name) description=$2; shift 2 ;;
				-r|--rc-script) rcscript=$2; shift 2 ;;
				-p|--package) package=$2; shift 2 ;;
				--) shift ; break ;;
				*) echo "Internal error!" ; exit 1 ;;
			esac
		done

		[ -n "$1" ] || usage $filename
		daemon=$1
		: ${description:=$daemon}
		: ${rcscript:=rc.$daemon}
		: ${package:=$daemon}

		replace "^$daemon|.*|$package\$" /mod/etc/reg/daemon.reg "$daemon|$description|$rcscript|$disable|$hide|$package"
		;;
	*)
		usage $0
		;;
esac

exit 0
