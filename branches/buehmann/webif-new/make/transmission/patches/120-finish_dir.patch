--- daemon/daemon.c
+++ daemon/daemon.c
@@ -72,6 +72,8 @@
     { 'C', "no-watch-dir", "Disable the watch-dir", "C", 0, NULL },
     { 941, "incomplete-dir", "Where to store new torrents until they're complete", NULL, 1, "<directory>" },
     { 942, "no-incomplete-dir", "Don't store incomplete torrents in a different location", NULL, 0, NULL },
+    { 943, "finish-dir", "Where to move torrents after they reached a specific ratio", NULL, 1, "<directory>" },
+    { 944, "no-finish-dir", "Don't move torrents to a different location after they reached a specific ratio", NULL, 0, NULL },
     { 'd', "dump-settings", "Dump the settings and exit", "d", 0, NULL },
     { 'e', "logfile", "Dump the log messages to this filename", "e", 1, "<filename>" },
     { 'f', "foreground", "Run in the foreground instead of daemonizing", "f", 0, NULL },
@@ -344,6 +346,11 @@
                       break;
             case 942: tr_bencDictAddBool( &settings, TR_PREFS_KEY_INCOMPLETE_DIR_ENABLED, FALSE );
                       break;
+            case 943: tr_bencDictAddStr( &settings, TR_PREFS_KEY_FINISH_DIR, optarg );
+                      tr_bencDictAddBool( &settings, TR_PREFS_KEY_FINISH_DIR_ENABLED, TRUE );
+                      break;
+            case 944: tr_bencDictAddBool( &settings, TR_PREFS_KEY_FINISH_DIR_ENABLED, FALSE );
+                      break;
             case 'd': dumpSettings = TRUE;
                       break;
             case 'e': logfile = fopen( optarg, "a+" );
--- daemon/remote.c
+++ daemon/remote.c
@@ -204,6 +204,8 @@
     { 963, "blocklist-update",       "Blocklist update", NULL, 0, NULL },
     { 'c', "incomplete-dir",         "Where to store new torrents until they're complete", "c", 1, "<dir>" },
     { 'C', "no-incomplete-dir",      "Don't store incomplete torrents in a different location", "C", 0, NULL },
+    { 943, "finish-dir",             "Where to move torrents after they reached a specific ratio", NULL, 1, "<directory>" },
+    { 944, "no-finish-dir",          "Don't move torrents to a different location after they reached a specific ratio", NULL, 0, NULL },
     { 'b', "debug",                  "Print debugging information", "b",  0, NULL },
     { 'd', "downlimit",              "Set the max download speed in KiB/s for the current torrent(s) or globally", "d", 1, "<speed>" },
     { 'D', "no-downlimit",           "Disable max download speed for the current torrent(s) or globally", "D", 0, NULL },
@@ -334,6 +336,8 @@
         case 'Y': /* no-lpd */
         case 800: /* torrent-done-script */
         case 801: /* no-torrent-done-script */
+        case 943: /* finish-dir */
+        case 944: /* no-finish-dir */
         case 970: /* alt-speed */
         case 971: /* no-alt-speed */
         case 972: /* alt-speed-downlimit */
@@ -1816,6 +1820,11 @@
                           break;
                 case 'C': tr_bencDictAddBool( args, TR_PREFS_KEY_INCOMPLETE_DIR_ENABLED, FALSE );
                           break;
+                case 943: tr_bencDictAddStr( args, TR_PREFS_KEY_FINISH_DIR, optarg );
+                          tr_bencDictAddBool( args, TR_PREFS_KEY_FINISH_DIR_ENABLED, TRUE );
+                          break;
+                case 944: tr_bencDictAddBool( args, TR_PREFS_KEY_FINISH_DIR_ENABLED, FALSE );
+                          break;
                 case 910: tr_bencDictAddStr( args, TR_PREFS_KEY_ENCRYPTION, "required" );
                           break;
                 case 911: tr_bencDictAddStr( args, TR_PREFS_KEY_ENCRYPTION, "preferred" );
--- daemon/transmission-daemon.1
+++ daemon/transmission-daemon.1
@@ -50,6 +50,11 @@
 Do not watch for new .torrent files.
 .It Fl B Fl -no-blocklist
 Disble blocklists.
+.It Fl -finish-dir Ar dir
+Move torrents reached their seed ratio to
+.Ar directory.
+.It Fl -no-finish-dir
+Don't move torrents reached their seed ratio to a different directory.
 .It Fl f Fl -foreground
 Run in the foreground and print errors to stderr.
 .It Fl g Fl -config-dir Ar directory
--- daemon/transmission-remote.1
+++ daemon/transmission-remote.1
@@ -143,6 +143,11 @@
 such as "\-g1,3-5" to add files #1, #3, #4, and #5 to the download list.
 .It Fl G Fl -no-get Ar all | file-index | files
 Mark file(s) for not downloading.
+.It Fl -finish-dir Ar dir
+Move torrents reached their seed ratio to
+.Ar directory.
+.It Fl -no-finish-dir
+Don't move torrents reached their seed ratio to a different directory.
 .It Fl gsr Fl -global-seedratio Ar ratio
 All torrents, unless overridden by a per-torrent setting, should seed until a specific
 .Ar ratio
--- doc/rpc-spec.txt
+++ doc/rpc-spec.txt
@@ -404,6 +404,8 @@
    "download-dir"                | string     default path to download torrents
    "dht-enabled"                 | boolean    true means allow dht in public torrents
    "encryption"                  | string     "required", "preferred", "tolerated"
+   "finish-dir"                  | string     path for torrents reached their seed limit, when enabled
+   "finish-dir-enabled"          | boolean    true means move torrents reached their seed ratio to finish-dir
    "incomplete-dir"              | string     path for incomplete torrents, when enabled
    "incomplete-dir-enabled"      | boolean    true means keep torrents in incomplete-dir until done
    "lpd-enabled"                 | boolean    true means allow Local Peer Discovery in public torrents
@@ -599,3 +601,5 @@
          | 2.00    | yes       | session-get    | new arg "start-added-torrents"
          | 2.00    | yes       | session-get    | new arg "trash-original-torrent-files"
          | 2.00    | yes       | torrent-get    | new arg "isFinished"
+         |         | yes       | session-set    | new arg "finish-dir"
+         |         | yes       | session-set    | new arg "finish-dir-enabled"
--- libtransmission/rpcimpl.c
+++ libtransmission/rpcimpl.c
@@ -1207,6 +1207,10 @@
         tr_sessionSetIncompleteDir( session, str );
     if( tr_bencDictFindBool( args_in, TR_PREFS_KEY_INCOMPLETE_DIR_ENABLED, &boolVal ) )
         tr_sessionSetIncompleteDirEnabled( session, boolVal );
+    if( tr_bencDictFindStr( args_in, TR_PREFS_KEY_FINISH_DIR, &str ) )
+        tr_sessionSetFinishDir( session, str );
+    if( tr_bencDictFindBool( args_in, TR_PREFS_KEY_FINISH_DIR_ENABLED, &boolVal ) )
+        tr_sessionSetFinishDirEnabled( session, boolVal );
     if( tr_bencDictFindInt( args_in, TR_PREFS_KEY_PEER_LIMIT_GLOBAL, &i ) )
         tr_sessionSetPeerLimit( session, i );
     if( tr_bencDictFindInt( args_in, TR_PREFS_KEY_PEER_LIMIT_TORRENT, &i ) )
@@ -1331,6 +1335,8 @@
     tr_bencDictAddInt ( d, TR_PREFS_KEY_PEER_LIMIT_TORRENT, tr_sessionGetPeerLimitPerTorrent( s ) );
     tr_bencDictAddStr ( d, TR_PREFS_KEY_INCOMPLETE_DIR, tr_sessionGetIncompleteDir( s ) );
     tr_bencDictAddBool( d, TR_PREFS_KEY_INCOMPLETE_DIR_ENABLED, tr_sessionIsIncompleteDirEnabled( s ) );
+    tr_bencDictAddStr ( d, TR_PREFS_KEY_FINISH_DIR, tr_sessionGetFinishDir( s ) );
+    tr_bencDictAddBool( d, TR_PREFS_KEY_FINISH_DIR_ENABLED, tr_sessionIsFinishDirEnabled( s ) );
     tr_bencDictAddBool( d, TR_PREFS_KEY_PEX_ENABLED, tr_sessionIsPexEnabled( s ) );
     tr_bencDictAddBool( d, TR_PREFS_KEY_DHT_ENABLED, tr_sessionIsDHTEnabled( s ) );
     tr_bencDictAddBool( d, TR_PREFS_KEY_LPD_ENABLED, tr_sessionIsLPDEnabled( s ) );
--- libtransmission/session.c
+++ libtransmission/session.c
@@ -252,6 +252,8 @@
     tr_bencDictAddInt ( d, TR_PREFS_KEY_ENCRYPTION,               TR_DEFAULT_ENCRYPTION );
     tr_bencDictAddStr ( d, TR_PREFS_KEY_INCOMPLETE_DIR,           tr_getDefaultDownloadDir( ) );
     tr_bencDictAddBool( d, TR_PREFS_KEY_INCOMPLETE_DIR_ENABLED,   FALSE );
+    tr_bencDictAddStr ( d, TR_PREFS_KEY_FINISH_DIR,               tr_getDefaultDownloadDir( ) );
+    tr_bencDictAddBool( d, TR_PREFS_KEY_FINISH_DIR_ENABLED,       FALSE );
     tr_bencDictAddBool( d, TR_PREFS_KEY_LAZY_BITFIELD,            TRUE );
     tr_bencDictAddInt ( d, TR_PREFS_KEY_MSGLEVEL,                 TR_MSG_INF );
     tr_bencDictAddInt ( d, TR_PREFS_KEY_OPEN_FILE_LIMIT,          atoi( TR_DEFAULT_OPEN_FILE_LIMIT_STR ) );
@@ -317,6 +319,8 @@
     tr_bencDictAddInt ( d, TR_PREFS_KEY_ENCRYPTION,               s->encryptionMode );
     tr_bencDictAddStr ( d, TR_PREFS_KEY_INCOMPLETE_DIR,           tr_sessionGetIncompleteDir( s ) );
     tr_bencDictAddBool( d, TR_PREFS_KEY_INCOMPLETE_DIR_ENABLED,   tr_sessionIsIncompleteDirEnabled( s ) );
+    tr_bencDictAddStr ( d, TR_PREFS_KEY_FINISH_DIR,               tr_sessionGetFinishDir( s ) );
+    tr_bencDictAddBool( d, TR_PREFS_KEY_FINISH_DIR_ENABLED,       tr_sessionIsFinishDirEnabled( s ) );
     tr_bencDictAddBool( d, TR_PREFS_KEY_LAZY_BITFIELD,            s->useLazyBitfield );
     tr_bencDictAddInt ( d, TR_PREFS_KEY_MSGLEVEL,                 tr_getMessageLevel( ) );
     tr_bencDictAddInt ( d, TR_PREFS_KEY_OPEN_FILE_LIMIT,          tr_fdGetFileLimit( s ) );
@@ -703,6 +707,10 @@
         tr_sessionSetIncompleteDir( session, str );
     if( tr_bencDictFindBool( settings, TR_PREFS_KEY_INCOMPLETE_DIR_ENABLED, &boolVal ) )
         tr_sessionSetIncompleteDirEnabled( session, boolVal );
+    if( tr_bencDictFindStr( settings, TR_PREFS_KEY_FINISH_DIR, &str ) )
+        tr_sessionSetFinishDir( session, str );
+    if( tr_bencDictFindBool( settings, TR_PREFS_KEY_FINISH_DIR_ENABLED, &boolVal ) )
+        tr_sessionSetFinishDirEnabled( session, boolVal );
     if( tr_bencDictFindBool( settings, TR_PREFS_KEY_RENAME_PARTIAL_FILES, &boolVal ) )
         tr_sessionSetIncompleteFileNamingEnabled( session, boolVal );
 
@@ -924,6 +932,49 @@
 ****
 ***/
 
+
+void
+tr_sessionSetFinishDir( tr_session * session, const char * dir )
+{
+    assert( tr_isSession( session ) );
+
+    if( session->finishDir != dir )
+    {
+        tr_free( session->finishDir );
+
+        session->finishDir = tr_strdup( dir );
+    }
+}
+
+const char*
+tr_sessionGetFinishDir( const tr_session * session )
+{
+    assert( tr_isSession( session ) );
+
+    return session->finishDir;
+}
+
+void
+tr_sessionSetFinishDirEnabled( tr_session * session, tr_bool b )
+{
+    assert( tr_isSession( session ) );
+    assert( tr_isBool( b ) );
+
+    session->isFinishDirEnabled = b;
+}
+
+tr_bool
+tr_sessionIsFinishDirEnabled( const tr_session * session )
+{
+    assert( tr_isSession( session ) );
+
+    return session->isFinishDirEnabled;
+}
+
+/***
+****
+***/
+
 void*
 tr_sessionGetBuffer( tr_session * session )
 {
@@ -1690,6 +1741,7 @@
     tr_free( session->torrentDir );
     tr_free( session->downloadDir );
     tr_free( session->incompleteDir );
+    tr_free( session->finishDir );
     tr_free( session->proxy );
     tr_free( session->proxyUsername );
     tr_free( session->proxyPassword );
--- libtransmission/session.h
+++ libtransmission/session.h
@@ -94,6 +94,7 @@
     tr_bool                      isIncompleteFileNamingEnabled;
     tr_bool                      isRatioLimited;
     tr_bool                      isIncompleteDirEnabled;
+    tr_bool                      isFinishDirEnabled;
     tr_bool                      pauseAddedTorrent;
     tr_bool                      deleteSourceTorrent;
 
@@ -139,6 +140,7 @@
     char *                       resumeDir;
     char *                       torrentDir;
     char *                       incompleteDir;
+    char *                       finishDir;
 
     tr_proxy_type                proxyType;
     char *                       proxy;
--- libtransmission/torrent.c
+++ libtransmission/torrent.c
@@ -323,6 +323,12 @@
 
         tor->isStopping = TRUE;
 
+        /* move torrent to finish-dir if enabled */
+        if( tr_sessionIsFinishDirEnabled( tor->session ) ) {
+            tr_torinf( tor, "Seed ratio reached; moving torrent to finish-dir" );
+            tr_torrentSetLocation(tor, tr_sessionGetFinishDir( tor->session ), TRUE, NULL, NULL);
+        }
+
         /* maybe notify the client */
         if( tor->ratio_limit_hit_func != NULL )
             tor->ratio_limit_hit_func( tor, tor->ratio_limit_hit_func_user_data );
--- libtransmission/transmission.h
+++ libtransmission/transmission.h
@@ -169,6 +169,8 @@
 #define TR_PREFS_KEY_ENCRYPTION                    "encryption"
 #define TR_PREFS_KEY_INCOMPLETE_DIR                "incomplete-dir"
 #define TR_PREFS_KEY_INCOMPLETE_DIR_ENABLED        "incomplete-dir-enabled"
+#define TR_PREFS_KEY_FINISH_DIR                    "finish-dir"
+#define TR_PREFS_KEY_FINISH_DIR_ENABLED            "finish-dir-enabled"
 #define TR_PREFS_KEY_LAZY_BITFIELD                 "lazy-bitfield-enabled"
 #define TR_PREFS_KEY_MSGLEVEL                      "message-level"
 #define TR_PREFS_KEY_OPEN_FILE_LIMIT               "open-file-limit"
@@ -389,6 +391,27 @@
 
 
 /**
+ * @brief set the per-session finish folder.
+ *
+ * When enabled (s. tr_sessionGetFinishDirEnabled()), torrents reached
+ * their seed ratio will be moved to that directory.
+ *
+ * @see tr_sessionGetFinishDir()
+ * @see tr_sessionSetFinishDirEnabled()
+ * @see tr_sessionGetFinishDirEnabled()
+ */
+void tr_sessionSetFinishDir( tr_session * session, const char * dir );
+
+/** @brief get the per-session finish folder */
+const char* tr_sessionGetFinishDir( const tr_session * session );
+
+/** @brief enable or disable use of the finish folder */
+void tr_sessionSetFinishDirEnabled( tr_session * session, tr_bool );
+
+/** @brief get whether or not the finish folder is enabled */
+tr_bool tr_sessionIsFinishDirEnabled( const tr_session * session );
+
+/**
  * @brief When enabled, newly-created files will have ".part" appended
  *        to their filename until the file is fully downloaded
  *
