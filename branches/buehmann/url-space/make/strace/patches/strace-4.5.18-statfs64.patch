--- acinclude.m4.orig	2004-04-14 04:45:53.000000000 +0200
+++ acinclude.m4	2010-03-17 23:42:12.000000000 +0100
@@ -210,6 +210,23 @@
 fi
 ])
 
+dnl ### A macro to determine whether statfs64 is defined.
+AC_DEFUN([AC_STATFS64],
+[AC_MSG_CHECKING(for statfs64 in sys/vfs.h)
+AC_CACHE_VAL(ac_cv_type_statfs64,
+[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#ifdef LINUX
+#include <linux/types.h>
+#include <sys/vfs.h>
+#endif]], [[struct statfs64 st;]])],[ac_cv_type_statfs64=yes],[ac_cv_type_statfs64=no])])
+AC_MSG_RESULT($ac_cv_type_statfs64)
+if test "$ac_cv_type_statfs64" = yes
+then
+	AC_DEFINE([HAVE_STATFS64], 1,
+[Define if statfs64 is available in sys/vfs.h.])
+fi
+])
+
+
 dnl ### A macro to determine if off_t is a long long
 AC_DEFUN([AC_OFF_T_IS_LONG_LONG],
 [AC_MSG_CHECKING(for long long off_t)
--- configure.ac.orig	2009-10-12 21:54:43.000000000 +0200
+++ configure.ac	2010-03-17 23:42:12.000000000 +0100
@@ -187,6 +187,7 @@
 		  struct stat.st_level,
 		  struct stat.st_rdev])
 AC_STAT64
+AC_STATFS64
 
 AC_TYPE_SIGNAL
 AC_TYPE_UID_T
--- file.c.orig	2009-10-21 15:44:04.000000000 +0200
+++ file.c	2010-03-17 23:42:12.000000000 +0100
@@ -1688,11 +1688,15 @@
 	return 0;
 }
 
-#ifdef LINUX
+#if defined LINUX && defined HAVE_STATFS64
 static void
 printstatfs64(struct tcb *tcp, long addr)
 {
+#ifdef HAVE_STAT64
 	struct statfs64 statbuf;
+#else
+	struct statfs statbuf;
+#endif
 
 	if (syserror(tcp) || !verbose(tcp)) {
 		tprintf("%#lx", addr);
