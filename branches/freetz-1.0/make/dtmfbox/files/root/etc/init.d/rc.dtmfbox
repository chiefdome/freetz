#!/bin/sh

DAEMON="dtmfbox"
WEBSERVER_PORT="6767"
DTMFBOX_WWW="http://fritz.v3v.de/dtmfbox/dtmfbox-0.4.1_rc4_6-dl"
DTMFBOX_WWW_DL_FILE="dtmfbox-0.4.1_rc4_6-dl.tar"
	
# dtmfbox already installed?
if [ -d /var/dtmfbox ];
then
	DTMFBOX_INSTALLED="1"
else
	if [ "$DTMFBOX_PATH" = "" ];
	then
		DTMFBOX_INSTALLED="0"
	else
		DTMFBOX_INSTALLED="1"
	fi
fi

# freetz/standalone/usb?
if [ -f "/mod/etc/conf/dtmfbox.cfg" ]; then export FREETZ="1"; DTMFBOX_INSTALLED="1"; else export FREETZ="0"; fi

if [ "$FREETZ" = "1" ]; then
	export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/mod/sbin:/mod/bin:/mod/usr/sbin:/mod/usr/bin
	export LD_LIBRARY_PATH=/mod/lib
	DESIGN="MOD"
	DTMFBOX="dtmfbox"
	DTMFBOX_DEFAULT="/etc/default.dtmfbox"
	DTMFBOX_CFG="/mod/etc/conf/$DAEMON.cfg"	
	USERSCRIPT="/var/tmp/flash/dtmfbox_userscript.sh"
	ln -s /bin/busybox /var/tmp/sh 2>/dev/null
else
	if [ "$DTMFBOX_PATH" = "" ]; then DTMFBOX_PATH="/var/dtmfbox"; fi
	export PATH=$DTMFBOX_PATH:$PATH
	DESIGN="FULLSCREEN"
	DTMFBOX="dtmfbox"
	DTMFBOX_DEFAULT="$DTMFBOX_PATH/default.dtmfbox"
	DTMFBOX_CFG="/var/dtmfbox/$DAEMON.save"	
	USERSCRIPT="$DTMFBOX_PATH/script/dtmfbox_userscript.sh"
	if [ -f "$DTMFBOX_PATH/boot.cfg" ]; 
	then
	  DTMFBOX_BOOT="/var/dtmfbox/boot.cfg"
	else
	  DTMFBOX_BOOT="/var/flash/debug.cfg"
	fi	
	ln -s /var/dtmfbox/busybox-tools /var/tmp/sh 2>/dev/null	
fi

##################################################################################
## Write account data
##################################################################################
write_acc_data() {

	let cnt=1

	while [ "$cnt" != "11" ];
	do

	  SEMI=";"
	  LIST=""
	  LIST="$LIST ACC_ACTIVE=\"\$DTMFBOX_ACC${cnt}_ACTIVE\"$SEMI" 
	  LIST="$LIST ACC_MSN=\"\$DTMFBOX_ACC${cnt}_NUMBER\"$SEMI" 
	  LIST="$LIST ACC_CTRL_OUT=\"\$DTMFBOX_ACC${cnt}_CTRL_OUT\"$SEMI"
	  LIST="$LIST ACC_DDI=\"\$DTMFBOX_SCRIPT_ACC${cnt}_DDI\"$SEMI"
	  LIST="$LIST AM=\"\$DTMFBOX_SCRIPT_ACC${cnt}_AM\"$SEMI"
	  eval $LIST

	  # Answering machine settings
	  LIST=""
	  if [ "$AM" = "1" ];
	  then	
		LIST="$LIST AM_PIN=\"\$DTMFBOX_SCRIPT_ACC${cnt}_AM_PIN\"$SEMI"		
		LIST="$LIST RECORD=\"\$DTMFBOX_SCRIPT_ACC${cnt}_RECORD\"$SEMI"		
		LIST="$LIST TIMEOUT=\"\$DTMFBOX_SCRIPT_ACC${cnt}_TIMEOUT\"$SEMI"		
		LIST="$LIST RINGTIME=\"\$DTMFBOX_SCRIPT_ACC${cnt}_RINGTIME\"$SEMI"		
		LIST="$LIST UNKNOWN_ONLY=\"\$DTMFBOX_SCRIPT_ACC${cnt}_UNKNOWN_ONLY\"$SEMI"		
		LIST="$LIST BEEP=\"\$DTMFBOX_SCRIPT_ACC${cnt}_BEEP\"$SEMI"		
		LIST="$LIST ANNOUNCEMENT=\"\$DTMFBOX_SCRIPT_ACC${cnt}_ANNOUNCEMENT\"$SEMI"		
		LIST="$LIST ANNOUNCEMENT_END=\"\$DTMFBOX_SCRIPT_ACC${cnt}_ANNOUNCEMENT_END\"$SEMI"		
		LIST="$LIST ON_AT=\"\$DTMFBOX_SCRIPT_ACC${cnt}_ON_AT\"$SEMI"		
		LIST="$LIST OFF_AT=\"\$DTMFBOX_SCRIPT_ACC${cnt}_OFF_AT\"$SEMI"		
	 
		# mailer settings
		LIST="$LIST MAIL_ACTIVE=\"\$DTMFBOX_SCRIPT_ACC${cnt}_MAIL_ACTIVE\"$SEMI"		
		LIST="$LIST MAIL_FROM=\"\$DTMFBOX_SCRIPT_ACC${cnt}_MAIL_FROM\"$SEMI"		
		LIST="$LIST MAIL_TO=\"\$DTMFBOX_SCRIPT_ACC${cnt}_MAIL_TO\"$SEMI"		
		LIST="$LIST MAIL_SERVER=\"\$DTMFBOX_SCRIPT_ACC${cnt}_MAIL_SERVER\"$SEMI"
		LIST="$LIST MAIL_USER=\"\$DTMFBOX_SCRIPT_ACC${cnt}_MAIL_USER\"$SEMI"
		LIST="$LIST MAIL_PASS=\"\$DTMFBOX_SCRIPT_ACC${cnt}_MAIL_PASS\"$SEMI"
		LIST="$LIST MAIL_DELETE=\"\$DTMFBOX_SCRIPT_ACC${cnt}_MAIL_DELETE\"$SEMI"
	 
		# ftp streamer settings
		LIST="$LIST FTP_ACTIVE=\"\$DTMFBOX_SCRIPT_ACC${cnt}_FTP_ACTIVE\"$SEMI"
		LIST="$LIST FTP_USER=\"\$DTMFBOX_SCRIPT_ACC${cnt}_FTP_USER\"$SEMI"
		LIST="$LIST FTP_PASS=\"\$DTMFBOX_SCRIPT_ACC${cnt}_FTP_PASS\"$SEMI"
		LIST="$LIST FTP_SERVER=\"\$DTMFBOX_SCRIPT_ACC${cnt}_FTP_SERVER\"$SEMI"
		LIST="$LIST FTP_PORT=\"\$DTMFBOX_SCRIPT_ACC${cnt}_FTP_PORT\"$SEMI"
		LIST="$LIST FTP_PATH=\"\$DTMFBOX_SCRIPT_ACC${cnt}_FTP_PATH\"$SEMI"
	  fi
	  eval $LIST
	  if [ "$ON_AT" = "" ]; then ON_AT="00:00"; fi
	  if [ "$OFF_AT" = "" ]; then OFF_AT="00:00"; fi
	 
	  # cb/ct settings
	  LIST=""
	  CBCT_ACTIVE=`eval echo \\$DTMFBOX_SCRIPT_ACC${cnt}_CBCT_ACTIVE` 
	  if [ "$CBCT_ACTIVE" = "1" ];
	  then
		LIST="$LIST CBCT_TRIGGERNO=\"\$DTMFBOX_SCRIPT_ACC${cnt}_CBCT_TRIGGERNO\"$SEMI"		
		LIST="$LIST CBCT_PINCODE=\"\$DTMFBOX_SCRIPT_ACC${cnt}_CBCT_PINCODE\"$SEMI"		
		LIST="$LIST CBCT_TYPE=\"\$DTMFBOX_SCRIPT_ACC${cnt}_CBCT_TYPE\"$SEMI"		
		eval $LIST
	   else			
	 	CBCT_TRIGGERNO=""
	 	CBCT_TYPE=""
	   fi

	   # normalize MSN (when # is escaped)
	   ACC_MSN=`echo "$ACC_MSN" | sed 's/\\#/#/g'`
	   ACC_ID=`echo "${cnt}"`

	   # create extra config file, for faster reading (only account specific information!)
	   if [ "$ACC_ACTIVE" = "1" ] && [ "$ACC_MSN" != "" ];	
	   then	
	   (
		. "$DTMFBOX_DEFAULT/tmp/dtmfbox_acc.config"
	   ) > "$DTMFBOX_PATH/tmp/dtmfbox_acc${cnt}.cfg"
	   chmod +x "$DTMFBOX_PATH/tmp/dtmfbox_acc${cnt}.cfg"
	   fi

 	   let cnt=cnt+1

	done
}

##################################################################################
## Create and read configuration
##################################################################################
read_config() {

	if [ "$FREETZ" = "1" ]; then
		if [ ! -r "$DTMFBOX_CFG" ]; then
			echo "Error [$DAEMON]: not configured" 1>&2
			exit 1
		fi
	else	
		if [ ! -f "./default.dtmfbox/dtmfbox.cfg" ] && [ ! -f "$DTMFBOX_CFG" ];
		then
			echo "Error [$DAEMON]: not configured" 1>&2
			exit 1
		fi
	fi

	# Get variables
	if [ -f $DTMFBOX_CFG ]; then
		. $DTMFBOX_CFG							# current config
	else
		if [ -f ./default.dtmfbox/dtmfbox.cfg ];
		then
			. ./default.dtmfbox/dtmfbox.cfg		# first install config (defaults)
		fi
	fi

	# freetz specific
    	if [ "$FREETZ" = "1" ]; then DTMFBOX_INSTALLED="1"; install; fi

	# download url from configuration
	WWW_PREFIX="$DTMFBOX_WWW"
	WWW_SUFFIX="$DTMFBOX_WWW_DL_FILE"

	# Change Path/Scriptpath
	if [ "$DTMFBOX_PATH" = "" ]; 
	then
		# /var/dtmfbox
		DTMFBOX_PATH="/var/dtmfbox"
		DTMFBOX_SCRIPTFILE="/var/dtmfbox/script/script_main.sh"
		USE_USB="0"
	else
		# usb-path
		DTMFBOX_SCRIPTFILE="$DTMFBOX_PATH/script/script_main.sh"
		USE_USB="1"
	fi

	if [ "$DTMFBOX_INSTALLED" = "1" ];
	then

		# write dtmfbox.cfg		
		(
			$DTMFBOX_DEFAULT/tmp/dtmfbox.config
		) > $DTMFBOX_PATH/dtmfbox.cfg
		chmod +x $DTMFBOX_PATH/dtmfbox.cfg

		# write tmp/dtmfbox_accX.cfg
		write_acc_data

		# write userscript (freetz)
		if [ "$FREETZ" = "1" ];
		then
			if [ ! -f /var/tmp/flash/dtmfbox_userscript.sh ]; then
				if [ -f /var/tmp/flash/dtmfbox_userscript.sh.tar.gz ]; then
					tar xvz -f /var/tmp/flash/dtmfbox_userscript.sh.tar.gz -C /
					rm /var/tmp/flash/dtmfbox_userscript.sh.tar.gz
				fi
			fi
		fi
	fi
}

##################################################################################
## Install (from web when files do not exist)
##################################################################################
install() {

	if [ "$FREETZ" = "0" ];
	then
		if [ "$DTMFBOX_INSTALLED" = "0" ];
		then
			ok=""
			while [ "$ok" != "j" ];
			do
				answer=""
				while [ "$answer" != "u" ] && [ "$answer" != "d" ];
				do
					echo -n "dtmfbox auf USB oder per Download installieren [u/d]? "
					read answer
				done
				if [ "$answer" = "u" ];
				then
					answer=`pwd`
				else
					answer="/var/dtmfbox";
				fi
						
				ok=""
				while [ "$ok" != "j" ] && [ "$ok" != "n" ];
				do
					echo -n "dtmfbox nach \"$answer\" installieren [j/n]? "
					read ok
					if [ "$ok" = "j" ]; then
						export DTMFBOX_PATH="$answer";
					else
						echo "Abbruch!"
						exit 1
					fi
				done
			done
	
			echo "dtmfbox wird installiert..."
		fi
		if [ "$DTMFBOX_PATH" = "" ]; then DTMFBOX_PATH="/var/dtmfbox"; fi
	
		# make sure, that /var/dtmfbox can be linked later ...
		if [ "$DTMFBOX_PATH" = "/var/dtmfbox" ]; then
			DTMFBOX_PATH="/var/dtmfbox-bin"
		fi

		rm /var/dtmfbox 2>/dev/null
		mkdir $DTMFBOX_PATH 2>/dev/null
		cd $DTMFBOX_PATH
	
		# get download package, when there are necessary files missing...
		if [ ! -f "$DTMFBOX_PATH/dtmfbox" ] || [ ! -f "$DTMFBOX_PATH/busybox-tools" ];
		then
			IS_DOWNLOAD="1"

		        WWW_PREFIX="$DTMFBOX_WWW"
                	WWW_SUFFIX="$DTMFBOX_WWW_DL_FILE"
	
			echo "Download busybox-tools..."
			wget $WWW_PREFIX/busybox-tools
			chmod +x busybox-tools
		
			echo "Download dtmfbox..."
			./busybox-tools mkfifo /var/tmp/dtmfbox_dl.tar
			wget $WWW_PREFIX/$WWW_SUFFIX -O - > /var/tmp/dtmfbox_dl.tar &
			cat /var/tmp/dtmfbox_dl.tar | ./busybox-tools tar xv -f - -C $DTMFBOX_PATH
			rm /var/tmp/dtmfbox_dl.tar		
		else
			IS_DOWNLOAD="0"
		fi	
	
		# link $DTMFBOX_PATH with /var/dtmfbox
		if [ ! -d /var/dtmfbox ]; then
			ln -s $DTMFBOX_PATH /var/dtmfbox
		fi
	
		# create dtmfbox.cfg
		if [ -f $DTMFBOX_CFG ]; then
			chmod +x $DTMFBOX_CFG
			. $DTMFBOX_CFG
		else
			# first install? set default config...
			cp $DTMFBOX_PATH/default.dtmfbox/dtmfbox.cfg $DTMFBOX_CFG
		fi
	
		if [ "$DTMFBOX_PATH" = "" ]; then DTMFBOX_PATH=/var/dtmfbox; fi
	
		# create dtmfbox.cfg
		$DTMFBOX_PATH/default.dtmfbox/tmp/dtmfbox.config > $DTMFBOX_PATH/dtmfbox.cfg
		chmod +x $DTMFBOX_PATH/dtmfbox.cfg	
	fi

	# make sure, that /var/dtmfbox can be linked later ...
	if [ "$DTMFBOX_PATH" = "/var/dtmfbox" ]; then
		DTMFBOX_PATH="/var/dtmfbox-bin"
	fi

	#
	# create some other directories (freetz/standalone/usb)
	#
	mkdir -p "$DTMFBOX_PATH"
	mkdir -p "$DTMFBOX_PATH/script"
	mkdir -p "$DTMFBOX_PATH/script/addons"
	mkdir -p "$DTMFBOX_PATH/play"
	mkdir -p "$DTMFBOX_PATH/record"
	mkdir -p "$DTMFBOX_PATH/tmp"

	# link or copy some directory/files.
	if [ ! -d "$DTMFBOX_PATH/default.dtmfbox" ]; then ln -s $DTMFBOX_DEFAULT $DTMFBOX_PATH/default.dtmfbox 2>/dev/null; fi
	if [ ! -d "$DTMFBOX_PATH/default.dtmfbox" ]; then cp -R $DTMFBOX_DEFAULT $DTMFBOX_PATH/default.dtmfbox; fi
	if [ ! -f "$DTMFBOX_PATH/script/script_main.sh" ]; then cp -Rs $DTMFBOX_DEFAULT/script/* $DTMFBOX_PATH/script/ 2>/dev/null; fi
	if [ ! -f "$DTMFBOX_PATH/script/script_main.sh" ]; then cp -R $DTMFBOX_DEFAULT/script/* $DTMFBOX_PATH/script/; fi

	# relink /var/dtmfbox to $DTMFBOX_PATH
	#
	rm /var/dtmfbox 2>/dev/null
	if [ ! -d /var/dtmfbox ]; then
		ln -s "$DTMFBOX_PATH" /var/dtmfbox
	fi
}

##################################################################################
## Start webserver
##################################################################################
start_httpd() {

	# Start webserver
	echo "Start Webserver..."
	if [ "$DTMFBOX_PATH" = "" ]; then DTMFBOX_PATH="/var/dtmfbox"; fi
	$DTMFBOX_PATH/busybox-tools httpd -p $WEBSERVER_PORT -h $DTMFBOX_PATH/httpd
	echo "done! Listening on port $WEBSERVER_PORT!"	
}

##################################################################################
## Stop webserver
##################################################################################
stop_httpd() {

	if [ ! -z "$(pidof "busybox-tools")" ]; then
	echo "Stop Webserver..."
	killall -9 busybox-tools
	echo "done!"
	fi
}

##################################################################################
## Start dtmfbox (logged/foreground/daemon)
##################################################################################
start() {

	echo -n "Start $DAEMON... "
	cd $DTMFBOX_PATH

	# Refresh voipd register (if started)
	if [ ! -z "$(pidof "voipd")" ]; then
		voipd -R 2>/dev/null
	fi

	if [ "$1" = "foreground" ]; 
	then
		# Run foreground
		echo ""
		$DAEMON -cfg $DTMFBOX_PATH/dtmfbox.cfg
	fi

	if [ "$1" = "log" ]; 
	then
		# Run daemon (logging)...
		$DAEMON -daemon -cfg $DTMFBOX_PATH/dtmfbox.cfg -log $DTMFBOX_PATH/dtmfbox.log
	fi

	if [ "$1" = "" ]; 
	then
		# Run daemon...
		$DAEMON -daemon -cfg $DTMFBOX_PATH/dtmfbox.cfg
	fi

	exitval=$?
	
	if [ "$exitval" -eq 0 ]; 
	then
		echo 'done!'
	else
		echo 'failed!'
		exit $exitval
	fi
}

##################################################################################
## Stop dtmfbox
##################################################################################
stop() {
	echo -n "Stop $DAEMON... "
	
	# FIX: dead script_main.sh script???
	killall -9 script_main.sh 2>/dev/null >/dev/null

	# Stop daemon
	if [ ! -z "$(pidof "$DAEMON")" ]; then
		cd $DTMFBOX_PATH
		$DAEMON -stop daemon >/dev/null &
	
		# max. wait 5 sec for stop
		let wait=5;
		while [ ! -z "$(pidof "$DAEMON")" ] && [ $wait -ge 1 ];
		do
			echo -n "$wait,"
			let wait=wait-1
			sleep 1
		done
	
		# kill dtmfbox
		killall -9 $DAEMON > /dev/null 2>&1
		exitval=$?
	fi

	
	# Refresh voipd register (if started)
	if [ ! -z "$(pidof "voipd")" ]; then
		voipd -R 2>/dev/null
	fi

	echo 'done!'
}

idle() {

	let wait=15
	echo -n "$DAEMON starting (15 sec)... "
	while [ $wait -ge 1 ]; 
	do
		sleep 1
		echo -n "$wait,"
		let wait=wait-1		
	done
	echo "ready!"
}


##################################################################################
## Check if config exists & create it
##################################################################################
case "$1" in
	""|load|start|restart|stop|log|foreground|install|start_httpd|stop_httpd)
	if [ "$DTMFBOX_INSTALLED" = "1" ]; then read_config; fi
	;;
esac

PATH=$DTMFBOX_PATH:$PATH

##################################################################################
## Cmd-Line parsing
##################################################################################
case "$1" in

	""|load)
		if [ "$FREETZ" = "1" ];
		then
			if type modreg > /dev/null;
			then		
				if [ "$DESIGN" = "MOD" ];
				then
					# Mod-Design
					modreg cgi "dtmfbox&sort=0&show=status" "$DAEMON Status"
					modreg cgi "dtmfbox&sort=1&show=accounts" "$DAEMON Accounts"
					modreg cgi "dtmfbox&sort=2&show=voip_capi" "$DAEMON Settings"
					modreg cgi "dtmfbox&sort=3&show=am" "$DAEMON AB"
					modreg cgi "dtmfbox&sort=4&show=dtmf" "$DAEMON DTMF"
					modreg cgi "dtmfbox&sort=5&show=cbct" "$DAEMON CB/CT"
					modreg cgi "dtmfbox&sort=6&show=misc" "$DAEMON Misc"
					modreg cgi "dtmfbox&sort=7&show=webphone" "$DAEMON Webphone"
				else
					# Fullscreen-Design
					modreg cgi $DAEMON $DAEMON			
				fi
			
				# Userdefined script
				modreg file dtmfbox_userscript dtmfbox-userscript 1 /etc/default.dtmfbox/dtmfbox.file
			fi
		fi

		if [ "$DTMFBOX_ENABLED" != "yes" ]; 
		then
			echo "$DAEMON is disabled" 1>&2
			exit 1;
		fi

		if [ ! -z "$(pidof $DAEMON)" ]; 
		then
			echo "$DAEMON already started."
		else
			if [ "$FREETZ" = "1" ];
			then
				idle
				install
				read_config
				start
			fi
		fi
		;;
	unload)
		stop
		if [ "$FREETZ" = "1" ];
		then
			if [ "$DESIGN" = "MOD" ];
			then
				# Mod-Design unregister
				modunreg cgi "dtmfbox&sort=0&show=status"
				modunreg cgi "dtmfbox&sort=1&show=accounts"
				modunreg cgi "dtmfbox&sort=2&show=voip_capi"
				modunreg cgi "dtmfbox&sort=3&show=am"
				modunreg cgi "dtmfbox&sort=4&show=dtmf"
				modunreg cgi "dtmfbox&sort=5&show=cbct"
				modunreg cgi "dtmfbox&sort=6&show=misc"
				modunreg cgi "dtmfbox&sort=7&show=webphone"
			else
				modunreg cgi $DAEMON;
			fi
			modunreg file dtmfbox_userscript
		fi
		;;
	install)
		if [ "$FREETZ" = "0" ]; then
			install
		fi
		;;
	start_httpd)
		if [ "$FREETZ" = "0" ]; then
			if [ ! -d "$DTMFBOX_PATH" ]; then echo "dtmfbox is not installed!"; exit; fi
			start_httpd
		fi
		;;
	stop_httpd)
		if [ "$FREETZ" = "0" ]; then
			if [ ! -d "$DTMFBOX_PATH" ]; then echo "dtmfbox is not installed!"; exit; fi
			stop_httpd
		fi
		;;
	start)
		if [ "$DTMFBOX_PATH" = "" ]; then echo "dtmfbox is not installed!"; exit; fi
  	    	sleep 3
	    	install
	    	start	
		;;
	stop)
		if [ "$DTMFBOX_PATH" = "" ]; then echo "dtmfbox is not installed!"; exit; fi
		stop
		;;
	log)
		if [ "$DTMFBOX_PATH" = "" ]; then echo "dtmfbox is not installed!"; exit; fi
		install
		start "log"
		;;
	foreground)
		if [ "$DTMFBOX_PATH" = "" ]; then echo "dtmfbox is not installed!"; exit; fi
		install
		start "foreground"
		;;
	restart)
		if [ "$DTMFBOX_PATH" = "" ]; then echo "dtmfbox is not installed!"; exit; fi
		install
		stop
		start
		;;
	status)
		if [ -z "$(pidof "$DAEMON")" ]; then
			echo "stopped"
		else
			echo "running"
		fi
		;;
	*)
	if [ "$FREETZ" = "0" ]; then
		echo "usage: $0 [load|unload|start|stop|restart|status|log|foreground|install|start_httpd|stop_httpd]" 1>&2		
	else
		echo "usage: $0 [load|unload|start|stop|restart|status|log|foreground]" 1>&2		
	fi
	exit 1
	;;
esac
exit 0
