--- src/mount_davfs.c
+++ src/mount_davfs.c
@@ -29,7 +29,9 @@
 #ifdef HAVE_FCNTL_H
 #include <fcntl.h>
 #endif
+#ifdef DO_CHECK_FSTAB
 #include <fstab.h>
+#endif
 #include <getopt.h>
 #include <grp.h>
 #ifdef HAVE_LIBINTL_H
@@ -133,8 +135,10 @@
 static char *
 check_double_mounts(dav_args *args);
 
+#ifdef DO_CHECK_FSTAB
 static void
 check_fstab(const dav_args *args);
+#endif
 
 static void
 check_mountpoint(dav_args *args);
@@ -177,8 +181,10 @@
 static int
 debug_opts_neon(const char *s);
 
+#ifdef DO_CHECK_FSTAB
 static char *
 decode_octal(const char *s);
+#endif
 
 static void
 delete_args(dav_args *args);
@@ -242,8 +248,10 @@
     if (seteuid(getuid()) != 0)
         error(EXIT_FAILURE, errno, _("can't change effective user id"));
 
+#ifdef DO_CHECK_FSTAB
     if (getuid() != 0)
         check_fstab(args);
+#endif
 
     parse_config(argv, args);
 
@@ -668,6 +676,7 @@
 }
 
 
+#ifdef DO_CHECK_FSTAB
 /* Checks fstab whether there is an entry for the mountpoint specified in args
    and compares the values in args with the values in fstab.
    If there is no such entry, or this entry does not allow user-mount, or the
@@ -739,6 +748,7 @@
     endfsent();
     delete_args(n_args);
 }
+#endif
 
 
 /* Checks if a valid mountpoint is specified.
@@ -1370,6 +1380,7 @@
 }
 
 
+#ifdef DO_CHECK_FSTAB
 /* Searches string s for octal encoded characters (like \040 for space).
    It returns a new string where these have been replaced by the
    respective characters. */
@@ -1401,6 +1412,7 @@
     
     return decoded;
 }
+#endif
 
 
 /* Frees all strings held by args and finally frees args. */
