mainmenu "Danisahne-Mod (DS-Mod_24) Configuration"

config DS_HAVE_DOT_CONFIG
	bool
	default y

comment "General --------------------------------"

config DS_AVM_VERSION_04_01
	bool
config DS_AVM_VERSION_04_06
	bool

choice

	prompt "Hardware type"
		default DS_TYPE_WLAN_3050
		help
			Select your box type here.

	config DS_TYPE_FON 
		select DS_AVM_VERSION_04_06
		bool "Fon"

	config DS_TYPE_FON_5010
		select DS_AVM_VERSION_04_06
		bool "Fon 5010"

	config DS_TYPE_FON_5012
		select DS_AVM_VERSION_04_06
		bool "Fon 5012"

	config DS_TYPE_FON_ATA
		select DS_AVM_VERSION_04_01
		bool "Fon ATA"

	config DS_TYPE_FON_WLAN
		select DS_AVM_VERSION_04_06
		bool "Fon WLAN"

	config DS_TYPE_SL_WLAN
		select DS_AVM_VERSION_04_06
		bool "SL WLAN"

	config DS_TYPE_WLAN_3050
		select DS_AVM_VERSION_04_06
		bool "WLAN 3050"

	config DS_TYPE_WLAN_3070
		select DS_AVM_VERSION_04_06
		bool "WLAN 3070"

	config DS_TYPE_CUSTOM
		bool "Custom"
		select DS_DL_OVERRIDE

endchoice


config DS_AVM_VERSION_STRING
	string
	default "04.01"			if DS_AVM_VERSION_04_01
	default "04.06"			if DS_AVM_VERSION_04_06
choice

	prompt "Firmware language"
		default DS_TYPE_LANG_DE if \
			! DS_TYPE_FON_WLAN && \
			! DS_TYPE_FON
		default DS_TYPE_LANG_EN if \
			DS_TYPE_FON_WLAN || \
			DS_TYPE_FON

	config DS_TYPE_LANG_DE
		bool "de - deutsch"
		depends on \
			! DS_TYPE_FON_WLAN && \
			! DS_TYPE_FON

	config DS_TYPE_LANG_A_CH
		bool "a-ch - deutsch"
		depends on \
			DS_TYPE_FON || \
			DS_TYPE_FON_ATA || \
			DS_TYPE_FON_WLAN

	config DS_TYPE_LANG_EN
		bool "en - international"
		depends on \
			DS_TYPE_FON || \
			DS_TYPE_FON_ATA || \
			DS_TYPE_FON_WLAN

endchoice

config DS_TYPE_LANG_STRING
	string
	default "de"		if DS_TYPE_LANG_DE
	default "a-ch"		if DS_TYPE_LANG_A_CH
	default "en"		if DS_TYPE_LANG_EN

choice

	prompt "Annex"
		depends on \
			DS_TYPE_FON && DS_TYPE_LANG_EN || \
			DS_TYPE_FON_WLAN && DS_TYPE_LANG_A_CH || \
			DS_TYPE_FON_WLAN && DS_TYPE_LANG_EN
		default DS_TYPE_ANNEX_B

	config DS_TYPE_ANNEX_A
		bool "A"

	config DS_TYPE_ANNEX_B
		bool "B"

endchoice

config DS_TYPE_STRING
	string
	default "fon"				if DS_TYPE_FON
	default "fon_5010"			if DS_TYPE_FON_5010
	default "fon_5012"			if DS_TYPE_FON_5012
	default "fon_ata"			if DS_TYPE_FON_ATA
	default "fon_wlan"			if DS_TYPE_FON_WLAN
	default "sl"				if DS_TYPE_SL
	default "sl_wlan"			if DS_TYPE_SL_WLAN
	default "wlan_3050"			if DS_TYPE_WLAN_3050
	default "wlan_3070"			if DS_TYPE_WLAN_3070
	default "custom"			if DS_TYPE_CUSTOM

comment "Custom options -------------------------"
	depends on DS_TYPE_CUSTOM

config DS_INSTALL_BASE
	bool
	select DS_LIB_ld_uClibc
	select DS_LIB_libcrypt
	select DS_LIB_libdl
	select DS_LIB_libpthread
	select DS_LIB_libuClibc
	default y
	help
		This is mandatory

config DS_REPLACE_BUSYBOX
	bool
	default y
	help
		This is mandatory

config DS_REPLACE_KERNEL
	bool "Replace kernel"
	depends on DS_TYPE_CUSTOM
	select DS_LIB_libnsl
	default n
	help
		Replace AVM kernel with self-built kernel.

		Saves a lot of space by utilizing unused space at the end of the kernel
		image and by using LZMA.

config DS_TARGET_REF
	string "Target ref"		if DS_TYPE_CUSTOM
	default "2mb"			if DS_TYPE_SL
	default "4mb"			if \
		DS_TYPE_FON || \
		DS_TYPE_FON_5010 || \
		DS_TYPE_FON_5012 || \
		DS_TYPE_FON_ATA || \
		DS_TYPE_FON_WLAN || \
		DS_TYPE_SL_WLAN || \
		DS_TYPE_WLAN_3050 || \
		DS_TYPE_WLAN_3070 || \
		DS_TYPE_CUSTOM
	default "8mb"			if DS_TYPE_DUMMY

config DS_KERNEL_REF
	string "Kernel ref"		if DS_TYPE_CUSTOM
	default "2mb"			if DS_TYPE_SL
	default "4mb"			if \
		DS_TYPE_FON || \
		DS_TYPE_FON_5010 || \
		DS_TYPE_FON_5012 || \
		DS_TYPE_FON_ATA || \
		DS_TYPE_FON_WLAN || \
		DS_TYPE_SL_WLAN || \
		DS_TYPE_WLAN_3050 || \
		DS_TYPE_WLAN_3070 || \
		DS_TYPE_CUSTOM
	default "ohio-8mb"		if DS_TYPE_DUMMY

config DS_HIDDEN_ROOT
	bool "Hidden root"		if DS_TYPE_CUSTOM
	default y				if \
		DS_TYPE_FON_5010 || \
		DS_TYPE_FON_5012 || \
		DS_TYPE_SL || \
		DS_TYPE_WLAN_3070
	default n				if \
		DS_TYPE_FON || \
		DS_TYPE_FON_ATA || \
		DS_TYPE_FON_WLAN || \
		DS_TYPE_SL_WLAN || \
		DS_TYPE_WLAN_3050 || \
		DS_TYPE_CUSTOM
	help
		Some boxes do not have the root filesystem in the mtd table, it begins
		just after the kernel.

config DS_CONTIGUOUS_HIDDEN_ROOT
	bool "Contiguous"		if DS_TYPE_CUSTOM
	depends on DS_HIDDEN_ROOT
	default y			if DS_TYPE_SL
	default n			if \
		DS_TYPE_FON_5010 || \
		DS_TYPE_FON_5012 || \
		DS_TYPE_WLAN_3070
	help
		A contiguous hidden squashfs starts where all hidden root filesystems
		start (just after the kernel), but is continued in filesystem mtd.

config DS_SQUASHFS_LZMA
	bool "Lzma squashfs"		if DS_TYPE_CUSTOM
	default y					if \
		DS_TYPE_FON || \
		DS_TYPE_FON_5010 || \
		DS_TYPE_FON_5012 || \
		DS_TYPE_FON_WLAN || \
		DS_TYPE_SL_WLAN || \
		DS_TYPE_WLAN_3050 || \
		DS_TYPE_WLAN_3070
	default n					if \
		DS_TYPE_FON_ATA || \
		DS_TYPE_SL || \
		DS_TYPE_CUSTOM
	help
		Is the squashfs compressed with lzma?

config DS_ROOTFS_VARTAR
	bool "RootFS contains var.tar"		if DS_TYPE_CUSTOM
	default y							if \
		DS_TYPE_FON_5010 || \
		DS_TYPE_FON_5012 || \
		DS_TYPE_WLAN_3070 || \
		(DS_TYPE_CUSTOM && DS_HIDDEN_ROOT)
	default n							if \
		DS_TYPE_FON || \
		DS_TYPE_FON_ATA || \
		DS_TYPE_FON_WLAN || \
		DS_TYPE_SL || \
		DS_TYPE_SL_WLAN || \
		DS_TYPE_WLAN_3050 || \
		(DS_TYPE_CUSTOM && ! DS_HIDDEN_ROOT)
	help
		var.tar can be placed in the hidden squashfs or in the root filesystem
		at /var.tar

config DS_KERNEL_MTD_SIZE
	int "Kernel (64K blocks)"	if DS_TYPE_CUSTOM
	default 10					if DS_TYPE_SL
	default 11					if \
		DS_TYPE_FON || \
		DS_TYPE_FON_ATA || \
		DS_TYPE_FON_WLAN || \
		DS_TYPE_SL_WLAN || \
		DS_TYPE_WLAN_3050 || \
		(DS_TYPE_CUSTOM && (! DS_HIDDEN_ROOT || DS_CONTIGUOUS_HIDDEN_ROOT))
	default 59					if \
		DS_TYPE_FON_5010 || \
		DS_TYPE_FON_5012 || \
		DS_TYPE_WLAN_3070 || \
		(DS_TYPE_CUSTOM && (DS_HIDDEN_ROOT && ! DS_CONTIGUOUS_HIDDEN_ROOT))
	default 119					if \
		DS_TYPE_DUMMY
	help
		Number of 64K blocks in the kernel mtd device.

config DS_FILESYSTEM_MTD_SIZE
	int "Filesystem (64K blocks)"	if DS_TYPE_CUSTOM
	depends on ! DS_HIDDEN_ROOT || DS_CONTIGUOUS_HIDDEN_ROOT
	default 20			if DS_TYPE_SL
	default 48			if \
		DS_TYPE_FON || \
		DS_TYPE_FON_ATA || \
		DS_TYPE_FON_WLAN || \
		DS_TYPE_SL_WLAN || \
		DS_TYPE_WLAN_3050 || \
		DS_TYPE_CUSTOM
	help
		Number of 64K blocks in the filesystem mtd device.

config DS_HAS_PHONE
	bool "Has Phone"		if DS_TYPE_CUSTOM
	default y				if \
		DS_TYPE_FON || \
		DS_TYPE_FON_5010 || \
		DS_TYPE_FON_5012 || \
		DS_TYPE_FON_ATA || \
		DS_TYPE_FON_WLAN
	default n				if \
		DS_TYPE_SL || \
		DS_TYPE_SL_WLAN || \
		DS_TYPE_WLAN_3050 || \
		DS_TYPE_WLAN_3070 || \
		DS_TYPE_CUSTOM
	help
		Select this if you have a box with phone support.

config DS_HAS_WLAN
	bool "Has WLAN"		if DS_TYPE_CUSTOM
	default y			if \
		DS_TYPE_FON_WLAN || \
		DS_TYPE_SL_WLAN || \
		DS_TYPE_WLAN_3050 || \
		DS_TYPE_WLAN_3070
	default n			if \
		DS_TYPE_FON || \
		DS_TYPE_FON_5010 || \
		DS_TYPE_FON_5012 || \
		DS_TYPE_FON_ATA || \
		DS_TYPE_SL || \
		DS_TYPE_CUSTOM
	help
		Select this if you have a box with WLAN.

config DS_HAS_USB
	bool "Has USB"		if DS_TYPE_CUSTOM
	default y			if \
		DS_TYPE_FON || \
		DS_TYPE_FON_ATA || \
		DS_TYPE_FON_WLAN || \
		DS_TYPE_SL || \
		DS_TYPE_SL_WLAN || \
		DS_TYPE_WLAN_3050 || \
		DS_TYPE_WLAN_3070
	default n			if \
		DS_TYPE_FON_5010 || \
		DS_TYPE_FON_5012 || \
		DS_TYPE_CUSTOM
	help
		Select this if you have a box with USB.

config DS_HAS_USB_HOST
	bool "USB host"		if DS_TYPE_CUSTOM
	depends on DS_HAS_USB
	default y			if DS_TYPE_WLAN_3070
	default n			if \
		DS_TYPE_FON || \
		DS_TYPE_FON_ATA || \
		DS_TYPE_FON_WLAN || \
		DS_TYPE_SL || \
		DS_TYPE_SL_WLAN || \
		DS_TYPE_WLAN_3050
	help
		Select this if your USB port is a host adapter

comment "Brandings ------------------------------"
	depends on ! DS_TYPE_CUSTOM
comment "Brandings (if exist) -------------------"
	depends on DS_TYPE_CUSTOM

config DS_BRANDING_1und1
	bool "1&1"
	depends on \
		DS_TYPE_FON_5010 || \
		DS_TYPE_FON_5012 || \
		DS_TYPE_SL || \
		DS_TYPE_SL_WLAN || \
		DS_TYPE_CUSTOM
	default y
	help
		1&1 branding

		Each branding provides the web UI templates for a certain manufacturer or OEM.

		NOTE: Make sure to choose at least one branding corresponding to the one
		defined in your box's boot loader environment. It can be determined by calling
		the following command from the box's shell prompt:

		echo $(cat /proc/sys/dev/adam2/firmware_version)

config DS_BRANDING_avm
	bool "AVM"
	depends on \
		DS_TYPE_FON_5010 || \
		DS_TYPE_FON_5012 || \
		DS_TYPE_FON_ATA && DS_TYPE_LANG_DE || \
		DS_TYPE_SL || \
		DS_TYPE_SL_WLAN || \
		DS_TYPE_WLAN_3050 || \
		DS_TYPE_WLAN_3070 || \
		DS_TYPE_CUSTOM
	default y
	help
		AVM branding

		Each branding provides the web UI templates for a certain manufacturer or OEM.

		NOTE: Make sure to choose at least one branding corresponding to the one
		defined in your box's boot loader environment. It can be determined by calling
		the following command from the box's shell prompt:

		echo $(cat /proc/sys/dev/adam2/firmware_version)

config DS_BRANDING_avme
	bool "AVM international"
	depends on \
		DS_TYPE_FON && DS_TYPE_LANG_A_CH || \
		DS_TYPE_FON && DS_TYPE_LANG_EN || \
		DS_TYPE_FON_ATA && DS_TYPE_LANG_A_CH || \
		DS_TYPE_FON_ATA && DS_TYPE_LANG_EN || \
		DS_TYPE_FON_WLAN && DS_TYPE_LANG_A_CH || \
		DS_TYPE_FON_WLAN && DS_TYPE_LANG_EN || \
		DS_TYPE_CUSTOM
	default y
	help
		AVM international branding

		Each branding provides the web UI templates for a certain manufacturer or OEM.

		NOTE: Make sure to choose at least one branding corresponding to the one
		defined in your box's boot loader environment. It can be determined by calling
		the following command from the box's shell prompt:

		echo $(cat /proc/sys/dev/adam2/firmware_version)

config DS_BRANDING_aol
	bool "AOL"
	depends on \
		DS_TYPE_WLAN_3050 || \
		DS_TYPE_CUSTOM
	default y
	help
		AOL branding

		Each branding provides the web UI templates for a certain manufacturer or OEM.

		NOTE: Make sure to choose at least one branding corresponding to the one
		defined in your box's boot loader environment. It can be determined by calling
		the following command from the box's shell prompt:

		echo $(cat /proc/sys/dev/adam2/firmware_version)

config DS_BRANDING_arcor
	bool "Arcor"
	depends on DS_TYPE_CUSTOM
	default y
	help
		Arcor branding

		Each branding provides the web UI templates for a certain manufacturer or OEM.

		NOTE: Make sure to choose at least one branding corresponding to the one
		defined in your box's boot loader environment. It can be determined by calling
		the following command from the box's shell prompt:

		echo $(cat /proc/sys/dev/adam2/firmware_version)

config DS_BRANDING_freenet
	bool "Freenet"
	depends on \
		DS_TYPE_FON_ATA && DS_TYPE_LANG_DE || \
		DS_TYPE_CUSTOM
	default y
	help
		Freenet branding

		Each branding provides the web UI templates for a certain manufacturer or OEM.

		NOTE: Make sure to choose at least one branding corresponding to the one
		defined in your box's boot loader environment. It can be determined by calling
		the following command from the box's shell prompt:

		echo $(cat /proc/sys/dev/adam2/firmware_version)


comment "Patches --------------------------------"

config DS_REMOVE_HELP
	bool "Remove help"
	default n
	help
		Removes the help pages from the web menu.

config DS_REMOVE_ASSISTANT
	bool "Remove assistant"
	default n
	help
		Removes the network assistant from the web menu.

config DS_REMOVE_CDROM_ISO
	bool "Remove cdrom.iso"
	depends on DS_HAS_USB && ! DS_TYPE_SL
	default n
	help
		Removes the file /lib/modules/cdrom.iso.

config DS_PATCH_ATA
	bool "Patch ATA"
	depends on DS_TYPE_DUMMY
	default n
	help
		Patches the ATA mode configuration pages into the web menu.

config DS_PATCH_ENUM
	bool "Patch enum"
	depends on DS_HAS_PHONE
	default n
	help
		Patches the enum configuration pages into the web menu.

config DS_PATCH_INTERNATIONAL
	bool "Patch international"
	depends on DS_HAS_PHONE && DS_TYPE_LANG_DE
	default y
	help
		Reveals some options from the international firmware in the web menu.

config DS_PATCH_WDS
	bool "Patch wds"
	depends on DS_HAS_WLAN && DS_AVM_VERSION_04_01
	default y
	help
		Patches the wds configuration pages into the web menu.

comment "Mod ------------------------------------"

choice

	prompt "Language"
	default DS_LANG_DE		if DS_TYPE_LANG_DE || DS_TYPE_LANG_A_CH
	default DS_LANG_EN		if DS_TYPE_LANG_EN

	config DS_LANG_DE
		bool "de - deutsch"

	config DS_LANG_EN
		bool "en - english"

endchoice

config DS_LANG_STRING
	string
	default "de"			if DS_LANG_DE
	default "en"			if DS_LANG_EN

menu "Package selection"

#config DS_BUILD_DYNAMIC_PACKAGES
#	bool "Build dynamic packages (NOT SUPPORTED YET)"
#	default n
#	help
#		If this is selected, all packages, which are not
#		selected, will be build as dynamic packages.

source make/Config.in

endmenu

menu "Advanced options"

config DS_DL_OVERRIDE
	bool "Override firmware source"
	default n
	help
		Enable this to override automatically generated entries.

config DS_DL_SITE
	string "Firmware site"		if DS_DL_OVERRIDE
	default "ftp://ftp.avm.de/fritz.box/fritzbox.fon/firmware/deutsch_a-ch"					if DS_TYPE_FON && DS_TYPE_LANG_A_CH
	default "ftp://ftp.avm.de/fritz.box/fritzbox.fon/firmware/english/annex_a"				if DS_TYPE_FON && DS_TYPE_LANG_EN && DS_TYPE_ANNEX_A
	default "ftp://ftp.avm.de/fritz.box/fritzbox.fon/firmware/english/annex_b"				if DS_TYPE_FON && DS_TYPE_LANG_EN && DS_TYPE_ANNEX_B
	default "ftp://ftp.avm.de/fritz.box/fritzbox.fon_5010/firmware"							if DS_TYPE_FON_5010
	default "ftp://ftp.avm.de/fritz.box/fritzbox.fon_5012/firmware"							if DS_TYPE_FON_5012
	default "ftp://ftp.avm.de/fritz.box/fritzbox.fon_ata/firmware/deutsch"					if DS_TYPE_FON_ATA && DS_TYPE_LANG_DE
	default "ftp://ftp.avm.de/fritz.box/fritzbox.fon_ata/firmware/deutsch_a-ch"				if DS_TYPE_FON_ATA && DS_TYPE_LANG_A_CH
	default "ftp://ftp.avm.de/fritz.box/fritzbox.fon_ata/firmware/english"					if DS_TYPE_FON_ATA && DS_TYPE_LANG_EN
	default "ftp://ftp.avm.de/fritz.box/fritzbox.fon_wlan/firmware/deutsch_a-ch/annex_a"	if DS_TYPE_FON_WLAN && DS_TYPE_LANG_A_CH && DS_TYPE_ANNEX_A
	default "ftp://ftp.avm.de/fritz.box/fritzbox.fon_wlan/firmware/deutsch_a-ch/annex_b"	if DS_TYPE_FON_WLAN && DS_TYPE_LANG_A_CH && DS_TYPE_ANNEX_B
	default "ftp://ftp.avm.de/fritz.box/fritzbox.fon_wlan/firmware/english/annex_a"			if DS_TYPE_FON_WLAN && DS_TYPE_LANG_EN && DS_TYPE_ANNEX_A
	default "ftp://ftp.avm.de/fritz.box/fritzbox.fon_wlan/firmware/english/annex_b"			if DS_TYPE_FON_WLAN && DS_TYPE_LANG_EN && DS_TYPE_ANNEX_B
	default "ftp://ftp.avm.de/fritz.box/fritzbox.sl/firmware/"								if DS_TYPE_SL
	default "ftp://ftp.avm.de/fritz.box/fritzbox.sl_wlan/firmware"							if DS_TYPE_SL_WLAN
	default "ftp://ftp.avm.de/fritz.box/fritzbox.wlan_3050/firmware"						if DS_TYPE_WLAN_3050
	default "ftp://ftp.avm.de/fritz.box/fritzbox.wlan_3070/firmware"						if DS_TYPE_WLAN_3070
	default "ftp://ftp.avm.de/fritz.box/..."												if DS_TYPE_CUSTOM

config DS_DL_SOURCE
	string "Firmware source"								if DS_DL_OVERRIDE
	default "fritz.box_fon.de.06.04.01.image"				if DS_TYPE_FON && DS_TYPE_LANG_A_CH
	default "fritz.box_fon.annexa.en.06.04.24.image"		if DS_TYPE_FON && DS_TYPE_LANG_EN && DS_TYPE_ANNEX_A
	default "fritz.box_fon.en.06.04.24.image"				if DS_TYPE_FON && DS_TYPE_LANG_EN && DS_TYPE_ANNEX_B
	default "fritz.box_fon_5010.23.04.27.image"				if DS_TYPE_FON_5010
	default "fritz.box_fon_5012.25.04.27.image"				if DS_TYPE_FON_5012
	default "fritz.box_fon_ata.11.04.01.image"				if DS_TYPE_FON_ATA && DS_TYPE_LANG_DE
	default "fritz.box_fon_ata.de.11.04.01.image"			if DS_TYPE_FON_ATA && DS_TYPE_LANG_A_CH
	default "fritz.box_fon_ata.en.11.04.01.image"			if DS_TYPE_FON_ATA && DS_TYPE_LANG_EN
	default "fritz.box_fon_wlan.annexa.de.08.04.15.image"	if DS_TYPE_FON_WLAN && DS_TYPE_LANG_A_CH && DS_TYPE_ANNEX_A
	default "fritz.box_fon_wlan.de.08.04.01.image"			if DS_TYPE_FON_WLAN && DS_TYPE_LANG_A_CH && DS_TYPE_ANNEX_B
	default "fritz.box_fon_wlan.annexa.en.08.04.21.image"	if DS_TYPE_FON_WLAN && DS_TYPE_LANG_EN && DS_TYPE_ANNEX_A
	default "fritz.box_fon_wlan.en.08.04.21.image"			if DS_TYPE_FON_WLAN && DS_TYPE_LANG_EN && DS_TYPE_ANNEX_B
	default "fritz.box_sl.10.03.93.image"					if DS_TYPE_SL
	default "fritz.box_sl_wlan.09.04.15.image"				if DS_TYPE_SL_WLAN
	default "fritz.box_wlan_3050.16.04.07.image"			if DS_TYPE_WLAN_3050
	default "fritz.box_wlan_3070.19.04.15.image"			if DS_TYPE_WLAN_3070
	default "fritz.box..."									if DS_TYPE_CUSTOM

config DS_DL_SITE2
	string "AVM web interface DL Site"		if DS_DL_OVERRIDE
	depends on \
		DS_TYPE_DUMMY
	default "ftp://ftp.avm.de/fritz.box/..."	if DS_TYPE_DUMMY

config DS_DL_SOURCE2
	string "AVM web interface firmware source"	if DS_DL_OVERRIDE
	depends on \
		DS_TYPE_DUMMY
	default "fritz. ... .image"	if DS_TYPE_DUMMY

menu "DS-Mod package download sites"

# This is a fixed entry, it is invisible and cannot be changed by the user
config DS_MOD_DL_NUM_SITES
	string
	default "5"

comment "Download site #1 - default: http://dsmod.3dfxatwork.de"

config DS_MOD_DL_SITE_1
	string ""
	default "http://dsmod.3dfxatwork.de"
	help
		Download site #1 for DS-Mod packages like 'mc-4.5.0-dsmod-0.2.tar.bz2',
		*not* for original software packages like 'mc-4.5.0.tar.gz'. During the
		build process, all mirrors defined here are triggered on a random basis,
		so as not to always use a certain mirror first. This is a cheap kind of
		load balancing.

		Note: We recommend you to only set #5 to a user-defined value, if
		necessary. Necessary means that #1 - #4 are currently unavailable or
		the desired package cannot be found on either of them. In addition to
		the default servers #1 and #2, many packages have another server name
		in their make file, so a user-defined mirror should rarely be necessary.

comment "Download site #2 - default: http://dsmod.wirsind.info"

config DS_MOD_DL_SITE_2
	string ""
	default "http://dsmod.wirsind.info"
	help
		Download site #2 for DS-Mod packages like 'mc-4.5.0-dsmod-0.2.tar.bz2',
		*not* for original software packages like 'mc-4.5.0.tar.gz'. During the
		build process, all mirrors defined here are triggered on a random basis,
		so as not to always use a certain mirror first. This is a cheap kind of
		load balancing.

		Note: We recommend you to only set #5 to a user-defined value, if
		necessary. Necessary means that #1 - #4 are currently unavailable or
		the desired package cannot be found on either of them. In addition to
		the default servers #1 and #2, many packages have another server name
		in their make file, so a user-defined mirror should rarely be necessary.

comment "Download site #3 - default: http://dsmod.magenbrot.net"

config DS_MOD_DL_SITE_3
	string ""
	default "http://dsmod.magenbrot.net"
	help
		Download site #3 for DS-Mod packages like 'mc-4.5.0-dsmod-0.2.tar.bz2',
		*not* for original software packages like 'mc-4.5.0.tar.gz'. During the
		build process, all mirrors defined here are triggered on a random basis,
		so as not to always use a certain mirror first. This is a cheap kind of
		load balancing.

		Note: We recommend you to only set #5 to a user-defined value, if
		necessary. Necessary means that #1 - #4 are currently unavailable or
		the desired package cannot be found on either of them. In addition to
		the default servers #1 and #2, many packages have another server name
		in their make file, so a user-defined mirror should rarely be necessary.

comment "Download site #4 - default: empty (reserved for later use)"

config DS_MOD_DL_SITE_4
	string ""
	help
		Download site #4 for DS-Mod packages like 'mc-4.5.0-dsmod-0.2.tar.bz2',
		*not* for original software packages like 'mc-4.5.0.tar.gz'. During the
		build process, all mirrors defined here are triggered on a random basis,
		so as not to always use a certain mirror first. This is a cheap kind of
		load balancing.

		Note: We recommend you to only set #5 to a user-defined value, if
		necessary. Necessary means that #1 - #4 are currently unavailable or
		the desired package cannot be found on either of them. In addition to
		the default servers #1 and #2, many packages have another server name
		in their make file, so a user-defined mirror should rarely be necessary.

comment "Download site #5 - user-defined"

config DS_MOD_DL_SITE_5
	string ""
	help
		Download site #5 for DS-Mod packages like 'mc-4.5.0-dsmod-0.2.tar.bz2',
		*not* for original software packages like 'mc-4.5.0.tar.gz'. During the
		build process, all mirrors defined here are triggered on a random basis,
		so as not to always use a certain mirror first. This is a cheap kind of
		load balancing.

		Note: We recommend you to only set #5 to a user-defined value, if
		necessary. Necessary means that #1 - #4 are currently unavailable or
		the desired package cannot be found on either of them. In addition to
		the default servers #1 and #2, many packages have another server name
		in their make file, so a user-defined mirror should rarely be necessary.

endmenu

config DS_VERBOSITY_LEVEL
	int "Verbosity level (0-2)"
	default 0
	help
		Verbosity level of the fwmod script and tar.0 is the least and 2 the
		most information.

choice

	prompt "Favicon"
	default DS_FAVICON_NONE
	help
		Adds small favicons to the document root.

	config DS_FAVICON_NONE
		bool "none"

	config DS_FAVICON_DSL123
		bool "dsl123's favicons"

	config DS_FAVICON_HDELLER
		bool "hdeller's favicons"

endchoice

config DS_FAVICON_STRING
	string
	default "none"			if DS_FAVICON_NONE
	default "dsl123"		if DS_FAVICON_DSL123
	default "hdeller"		if DS_FAVICON_HDELLER

config DS_DEVELOPER_VERSION_STRING
	bool "Developer version string"
	default n
	help
		Add SVN (Subversion) repository revision number to firmware image name
		and to /etc/.subversion, /etc/version within firmware itself.

		The revision number string is generated by the client command line tool
		svnversion and may include switch/modify flags and/or a range of
		version numbers, depending on the current state of the working
		directory at the time of generation. See 'svnversion --help' for
		details.

		ATTENTION! This option is for developers working on checked-out
		versions of the DS-Mod source code only and requires svnversion to be
		installed.

choice

	prompt "SquashFS block size"
	default DS_SQUASHFS_BLOCKSIZE_65536
	help
		Block size of the root filesystem (and hidden SquashFS)

	config DS_SQUASHFS_BLOCKSIZE_ORIG
		bool "original"

	config DS_SQUASHFS_BLOCKSIZE_16384
		bool "16384"

	config DS_SQUASHFS_BLOCKSIZE_65536
		bool "65536"

endchoice

menu "BusyBox options ### TODO: dummy - make functional ###"
	depends on DS_REPLACE_BUSYBOX
	source make/busybox/Config.in
endmenu

menu "Kernel modules"
	depends on DS_REPLACE_KERNEL

	source kernel/Config.in
endmenu

menu "Shared libraries"
	source make/libs/Config.in
endmenu

menu "Compiler options"

choice
	prompt "Toolchains"
	default DS_DOWNLOAD_TOOLCHAIN
	help
		Download Toolchain, build toolchain

	config DS_DOWNLOAD_TOOLCHAIN
		bool "Download and use precompiled toolchain"

	config DS_BUILD_TOOLCHAIN
		bool "Build toolchain (requires 4GB diskspace)"
endchoice

config DS_TARGET_CROSS
	string
	default "mipsel-linux-uclibc-"

config DS_TARGET_MAKE_PATH
	string
	default "toolchain/target/bin"

config DS_TARGET_CFLAGS
	string "Target compiler flags"
	default "-Os -W -Wall -pipe -march=mips32 -mips32 -Wa,--trap -msoft-float"

config DS_JLEVEL
	int "Number of jobs to run simultaneously"
	default "1"
	help
		Number of jobs to run simultanesouly

config DS_KERNEL_CROSS
	string
	default "mipsel-unknown-linux-gnu-"

config DS_KERNEL_MAKE_PATH
	string
	default "toolchain/kernel/bin"

source toolchain/Config.in

endmenu

endmenu
