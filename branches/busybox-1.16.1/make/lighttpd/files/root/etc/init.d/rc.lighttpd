#!/bin/sh

DAEMON=lighttpd
DAEMON_LONG_NAME="lighttpd web server"

. /etc/init.d/modlibrc
. /usr/bin/lighttpd_has

pre_config() {
	modlib_addgroup wwwrun
	modlib_adduser wwwrun -G wwwrun -s /bin/false -H -D -g "lighttpd account"
}

cleanup_always() {
	modunreg status lighttpd lighttpd-log
}

cleanup() {
	cleanup_always
	rm -rf /var/log/lighttpd/
	rm -f /mod/etc/$DAEMON/$DAEMON.conf
}

status_log() {
	if [ "$LIGHTTPD_LOGGING" = "yes" ]; then
		if [ "$LIGHTTPD_LOGGING_ERROR_FILE" = "yes" ] || [ "$(has_mod accesslog)" = "yes" -a "$LIGHTTPD_LOGGING_ACCESS_FILE" = "yes" ]; then
			modreg status lighttpd lighttpd-log lighttpd-log
		fi
	fi
}

configure() {
	cleanup

	mkdir -p /mod/etc/$DAEMON
	(
		if [ -x "/tmp/flash/${DAEMON}_conf" ]; then
			/tmp/flash/${DAEMON}_conf
		else
			/mod/etc/default.$DAEMON/${DAEMON}_conf
		fi

		if [ -r "/tmp/flash/${DAEMON}.extra" ]; then
			cat /tmp/flash/${DAEMON}.extra
		fi
	) > /mod/etc/$DAEMON/$DAEMON.conf

	status_log
}

stop() {
	echo -n "Stopping $DAEMON_LONG_NAME..."
	exitval=255
	if [ -s /var/run/rc.lighttpd.pid ]; then
		kill $(cat /var/run/rc.lighttpd.pid) > /dev/null 2>&1
		exitval=$?
		rm -f /var/run/rc.lighttpd.pid
	else
		killall $DAEMON > /dev/null 2>&1
		exitval=$?
	fi

	cleanup

	if [ "$exitval" -eq 0 ]; then
		echo 'done.'
	else
		echo 'failed.'
		exit $exitval
	fi
}

checkdir() {
	i=60
	while [ ! -d "$1" ]; do
		echo -n "Directory $1 not available at round $i"
		let i=$i-1
		if [ $i -eq 0 ]; then
			echo " - not starting lighttpd"
			exit 1
		fi
		echo " - sleeping"
		sleep 10
	done
}

start() {
	trap "rm -f /var/run/rc.lighttpd.pid; exit 255" 0 1 2 3 15
	echo -n "Starting $DAEMON_LONG_NAME ..."
	if modlib_check_running; then
		echo "$DAEMON already running."
		exit 0
	fi

	checkdir "$LIGHTTPD_DOCROOT"
	configure

	LD_PRELOAD=
	modlib_startdaemon $DAEMON -f /mod/etc/$DAEMON/$DAEMON.conf
	exitval=$?

	if [ "$exitval" -eq 0 ]; then
		echo 'done.'
	else
		echo 'daemon failed.'
		cleanup_always
		exit $exitval
	fi
}

trap "rm -f /var/run/rc.lighttpd.pid; exit 255" 1 2 3 15
case "$1" in
	""|load)
		pre_config

		modreg cgi 'lighttpd' 'lighttpd'

		if has_ssl_support >/dev/null; then
			deffile='/mod/etc/default.lighttpd/lighttpd_crt.def'
			[ -r /tmp/flash/lighttpd_crt.def ] && deffile='/tmp/flash/lighttpd_crt.def'
			modreg file 'lighttpd_crt' 'lighttpd: Cert/Key' 0 "$deffile"
			deffile='/mod/etc/default.lighttpd/lighttpd_ca.def'
			[ -r /tmp/flash/lighttpd_ca.def ] && deffile='/tmp/flash/lighttpd_ca.def'
			modreg file 'lighttpd_ca' 'lighttpd: CA Cert' 0 "$deffile"
		fi

		if has_mod auth >/dev/null; then
			deffile='/mod/etc/default.lighttpd/lighttpd_user.def'
			[ -r /tmp/flash/lighttpd_user.def ] && deffile='/tmp/flash/lighttpd_user.def'
			modreg file 'lighttpd_user' 'lighttpd: Accounts' 0 "$deffile"
			deffile='/mod/etc/default.lighttpd/lighttpd_rights.def'
			[ -r /tmp/flash/lighttpd_rights.def ] && deffile='/tmp/flash/lighttpd_rights.def'
			modreg file 'lighttpd_rights' 'lighttpd: Rights' 0 "$deffile"
		fi

		deffile='/mod/etc/default.lighttpd/lighttpd_add.def'
		[ -r /tmp/flash/lighttpd_add.def ] && deffile='/tmp/flash/lighttpd_add.def'
		modreg file 'lighttpd_add' 'lighttpd: Additional' 0 "$deffile"

		if [ "$LIGHTTPD_ENABLED" != "yes" ]; then
			echo "$DAEMON is disabled" 1>&2
			exit 1;
		fi

		( start ) &
		echo $! > /var/run/rc.lighttpd.pid
		;;
	unload)
		modlib_stop
		if has_ssl_support >/dev/null; then
			modunreg file 'lighttpd_crt'
			modunreg file 'lighttpd_ca'
		fi
		if has_mod auth >/dev/null; then
			modunreg file 'lighttpd_user'
			modunreg file 'lighttpd_rights'
		fi
		modunreg file 'lighttpd_add'
		modunreg cgi 'lighttpd'
		;;
	start)
		if [ -s /var/run/rc.lighttpd.pid ]; then
			kill -0 $(cat /var/run/rc.lighttpd.pid)
			if [ $? -eq 0 ]; then
				echo "Startup of $DAEMON already performed."
				exit 0
			fi
			rm -f /var/run/rc.lighttpd.pid
		fi
		( start ) &
		echo $! > /var/run/rc.lighttpd.pid
		;;
	stop)
		stop
		;;
	restart)
		modlib_restart
		;;
	status)
		modlib_status
		;;
	*)
		echo "Usage: $0 [load|unload|start|stop|reload|restart|status]" 1>&2
		exit 1
		;;
esac

exit 0
