$(call PKG_INIT_BIN, 1.41.9)
$(PKG)_SOURCE:=e2fsprogs-$($(PKG)_VERSION).tar.gz
$(PKG)_SITE:=@SF/e2fsprogs
$(PKG)_DIR:=$(SOURCE_DIR)/e2fsprogs-$($(PKG)_VERSION)
# e2fsck selected
$(PKG)_E2FSCK_BINARY:=$(E2FSPROGS_DIR)/e2fsck/e2fsck
$(PKG)_E2FSCK_TARGET_BINARY:=$($(PKG)_DEST_DIR)/usr/sbin/e2fsck
# making selected
$(PKG)_MKE2FS_BINARY:=$(E2FSPROGS_DIR)/misc/mke2fs
$(PKG)_MKE2FS_TARGET_BINARY:=$($(PKG)_DEST_DIR)/usr/sbin/mke2fs
$(PKG)_MKLOSTFOUND_BINARY:=$(E2FSPROGS_DIR)/misc/mklost+found
$(PKG)_MKLOSTFOUND_TARGET_BINARY:=$($(PKG)_DEST_DIR)/usr/sbin/mklost+found
# tuning selected
$(PKG)_TUNE2FS_BINARY:=$(E2FSPROGS_DIR)/misc/tune2fs
$(PKG)_TUNE2FS_TARGET_BINARY:=$($(PKG)_DEST_DIR)/usr/sbin/tune2fs
$(PKG)_DUMPE2FS_BINARY:=$(E2FSPROGS_DIR)/misc/dumpe2fs
$(PKG)_DUMPE2FS_TARGET_BINARY:=$($(PKG)_DEST_DIR)/usr/sbin/dumpe2fs
$(PKG)_CHATTR_BINARY:=$(E2FSPROGS_DIR)/misc/chattr
$(PKG)_CHATTR_TARGET_BINARY:=$($(PKG)_DEST_DIR)/usr/sbin/chattr
$(PKG)_LSATTR_BINARY:=$(E2FSPROGS_DIR)/misc/lsattr
$(PKG)_LSATTR_TARGET_BINARY:=$($(PKG)_DEST_DIR)/usr/sbin/lsattr
# debug selected
$(PKG)_E2IMAGE_BINARY:=$(E2FSPROGS_DIR)/misc/e2image
$(PKG)_E2IMAGE_TARGET_BINARY:=$($(PKG)_DEST_DIR)/usr/sbin/e2image
$(PKG)_E2UNDO_BINARY:=$(E2FSPROGS_DIR)/misc/e2undo
$(PKG)_E2UNDO_TARGET_BINARY:=$($(PKG)_DEST_DIR)/usr/sbin/e2undo
$(PKG)_DEBUGFS_BINARY:=$(E2FSPROGS_DIR)/debugfs/debugfs
$(PKG)_DEBUGFS_TARGET_BINARY:=$($(PKG)_DEST_DIR)/usr/sbin/debugfs
$(PKG)_LOGSAVE_BINARY:=$(E2FSPROGS_DIR)/misc/logsave
$(PKG)_LOGSAVE_TARGET_BINARY:=$($(PKG)_DEST_DIR)/usr/sbin/logsave
#blkid selected
$(PKG)_BLKID_BINARY:=$(E2FSPROGS_DIR)/misc/blkid
$(PKG)_BLKID_TARGET_BINARY:=$($(PKG)_DEST_DIR)/usr/sbin/blkid
$(PKG)_BLKID_LIB_BINARY:=$($(PKG)_DIR)/lib/blkid/libblkid.a
$(PKG)_BLKID_LIB_STAGING_BINARY:=$(TARGET_TOOLCHAIN_STAGING_DIR)/usr/lib/libblkid.a
# fixing selected
$(PKG)_BADBLOCKS_BINARY:=$(E2FSPROGS_DIR)/misc/badblocks
$(PKG)_BADBLOCKS_TARGET_BINARY:=$($(PKG)_DEST_DIR)/usr/sbin/badblocks
$(PKG)_FILEFRAG_BINARY:=$(E2FSPROGS_DIR)/misc/filefrag
$(PKG)_FILEFRAG_TARGET_BINARY:=$($(PKG)_DEST_DIR)/usr/sbin/filefrag
$(PKG)_UUIDD_BINARY:=$(E2FSPROGS_DIR)/misc/uuidd
$(PKG)_UUIDD_TARGET_BINARY:=$($(PKG)_DEST_DIR)/usr/sbin/uuidd
$(PKG)_UUIDGEN_BINARY:=$(E2FSPROGS_DIR)/misc/uuidgen
$(PKG)_UUIDGEN_TARGET_BINARY:=$($(PKG)_DEST_DIR)/usr/sbin/uuidgen
$(PKG)_UUID_LIB_BINARY:=$($(PKG)_DIR)/lib/uuid/libuuid.a
$(PKG)_UUID_LIB_STAGING_BINARY:=$(TARGET_TOOLCHAIN_STAGING_DIR)/usr/lib/libuuid.a
$(PKG)_SOURCE_MD5:=52f60a9e19a02f142f5546f1b5681927 

$(PKG)_CONFIG_SUBOPTS += FREETZ_PACKAGE_E2FSPROGS_E2FSCK
$(PKG)_CONFIG_SUBOPTS += FREETZ_PACKAGE_E2FSPROGS_E2MAKING
$(PKG)_CONFIG_SUBOPTS += FREETZ_PACKAGE_E2FSPROGS_E2TUNING
$(PKG)_CONFIG_SUBOPTS += FREETZ_PACKAGE_E2FSPROGS_E2DEBUG
$(PKG)_CONFIG_SUBOPTS += FREETZ_PACKAGE_E2FSPROGS_BLKID
$(PKG)_CONFIG_SUBOPTS += FREETZ_PACKAGE_E2FSPROGS_E2FIXING


$(PKG_SOURCE_DOWNLOAD)
$(PKG_UNPACKED)
$(PKG_CONFIGURED_CONFIGURE)


$($(PKG)_E2FSCK_BINARY) \
	$($(PKG)_MKE2FS_BINARY) \
	$($(PKG)_MKLOSTFOUND_BINARY) \
	$($(PKG)_TUNE2FS_BINARY) \
	$($(PKG)_DUMPE2FS_BINARY) \
	$($(PKG)_CHATTR_BINARY) \
	$($(PKG)_LSATTR_BINARY) \
	$($(PKG)_E2IMAGE_BINARY) \
	$($(PKG)_E2UNDO_BINARY) \
	$($(PKG)_DEBUGFS_BINARY) \
	$($(PKG)_LOGSAVE_BINARY) \
	$($(PKG)_BADBLOCKS_BINARY) \
	$($(PKG)_FILEFRAG_BINARY) \
	$($(PKG)_BLKID_BINARY) \
	$($(PKG)_UUIDD_BINARY) \
	$($(PKG)_UUIDGEN_BINARY) \
	$($(PKG)_BLKID_LIB_BINARY) \
	$($(PKG)_UUID_LIB_BINARY) : $($(PKG)_DIR)/.configured
	$(SUBMAKE) -C $(E2FSPROGS_DIR) \
		all

# e2fsck
$($(PKG)_E2FSCK_TARGET_BINARY): $($(PKG)_E2FSCK_BINARY)
ifeq ($(strip $(FREETZ_PACKAGE_E2FSPROGS_E2FSCK)),y)
	$(INSTALL_BINARY_STRIP)
endif

# making
$($(PKG)_MKE2FS_TARGET_BINARY): $($(PKG)_MKE2FS_BINARY)
ifeq ($(strip $(FREETZ_PACKAGE_E2FSPROGS_E2MAKING)),y)
	$(INSTALL_BINARY_STRIP)
endif

$($(PKG)_MKLOSTFOUND_TARGET_BINARY): $($(PKG)_MKLOSTFOUND_BINARY)
ifeq ($(strip $(FREETZ_PACKAGE_E2FSPROGS_E2MAKING)),y)
	$(INSTALL_BINARY_STRIP)
endif

# tuning
$($(PKG)_TUNE2FS_TARGET_BINARY): $($(PKG)_TUNE2FS_BINARY)
ifeq ($(strip $(FREETZ_PACKAGE_E2FSPROGS_E2TUNING)),y)
	$(INSTALL_BINARY_STRIP)
endif

$($(PKG)_DUMPE2FS_TARGET_BINARY): $($(PKG)_DUMPE2FS_BINARY)
ifeq ($(strip $(FREETZ_PACKAGE_E2FSPROGS_E2TUNING)),y)
	$(INSTALL_BINARY_STRIP)
endif

$($(PKG)_CHATTR_TARGET_BINARY): $($(PKG)_CHATTR_BINARY)
ifeq ($(strip $(FREETZ_PACKAGE_E2FSPROGS_E2TUNING)),y)
	$(INSTALL_BINARY_STRIP)
endif

$($(PKG)_LSATTR_TARGET_BINARY): $($(PKG)_LSATTR_BINARY)
ifeq ($(strip $(FREETZ_PACKAGE_E2FSPROGS_E2TUNING)),y)
	$(INSTALL_BINARY_STRIP)
endif

# debug
$($(PKG)_E2IMAGE_TARGET_BINARY): $($(PKG)_E2IMAGE_BINARY)
ifeq ($(strip $(FREETZ_PACKAGE_E2FSPROGS_E2DEBUG)),y)
	$(INSTALL_BINARY_STRIP)
endif

$($(PKG)_E2UNDO_TARGET_BINARY): $($(PKG)_E2UNDO_BINARY)
ifeq ($(strip $(FREETZ_PACKAGE_E2FSPROGS_E2DEBUG)),y)
	$(INSTALL_BINARY_STRIP)
endif

$($(PKG)_DEBUGFS_TARGET_BINARY): $($(PKG)_DEBUGFS_BINARY)
ifeq ($(strip $(FREETZ_PACKAGE_E2FSPROGS_E2DEBUG)),y)
	$(INSTALL_BINARY_STRIP)
endif

$($(PKG)_LOGSAVE_TARGET_BINARY): $($(PKG)_LOGSAVE_BINARY)
ifeq ($(strip $(FREETZ_PACKAGE_E2FSPROGS_E2DEBUG)),y)
	$(INSTALL_BINARY_STRIP)
endif

# fixing
$($(PKG)_BADBLOCKS_TARGET_BINARY): $($(PKG)_BADBLOCKS_BINARY)
ifeq ($(strip $(FREETZ_PACKAGE_E2FSPROGS_E2FIXING)),y)
	$(INSTALL_BINARY_STRIP)
endif

$($(PKG)_FILEFRAG_TARGET_BINARY): $($(PKG)_FILEFRAG_BINARY)
ifeq ($(strip $(FREETZ_PACKAGE_E2FSPROGS_E2FIXING)),y)
	$(INSTALL_BINARY_STRIP)
endif

$($(PKG)_BLKID_TARGET_BINARY): $($(PKG)_BLKID_BINARY)
ifeq ($(strip $(FREETZ_PACKAGE_E2FSPROGS_BLKID)),y)
	$(INSTALL_BINARY_STRIP)
endif

$($(PKG)_UUIDD_TARGET_BINARY): $($(PKG)_UUIDD_BINARY)
ifeq ($(strip $(FREETZ_PACKAGE_E2FSPROGS_E2FIXING)),y)
	$(INSTALL_BINARY_STRIP)
endif

$($(PKG)_UUIDGEN_TARGET_BINARY): $($(PKG)_UUIDGEN_BINARY)
ifeq ($(strip $(FREETZ_PACKAGE_E2FSPROGS_E2FIXING)),y)
	$(INSTALL_BINARY_STRIP)
endif

$($(PKG)_BLKID_LIB_STAGING_BINARY): $($(PKG)_BLKID_LIB_BINARY)
	$(SUBMAKE) -C $(E2FSPROGS_DIR)/lib/blkid \
		DESTDIR="$(TARGET_TOOLCHAIN_STAGING_DIR)" \
		install
	$(PKG_FIX_LIBTOOL_LA) \
		$(TARGET_TOOLCHAIN_STAGING_DIR)/usr/lib/pkgconfig/blkid.pc

$($(PKG)_UUID_LIB_STAGING_BINARY): $($(PKG)_UUID_LIB_BINARY)
	$(SUBMAKE) -C $(E2FSPROGS_DIR)/lib/uuid \
		DESTDIR="$(TARGET_TOOLCHAIN_STAGING_DIR)" \
		install
	$(PKG_FIX_LIBTOOL_LA) \
		$(TARGET_TOOLCHAIN_STAGING_DIR)/usr/lib/pkgconfig/uuid.pc

$(pkg):

$(pkg)-precompiled: $($(PKG)_E2FSCK_TARGET_BINARY) \
			$($(PKG)_MKE2FS_TARGET_BINARY) \
			$($(PKG)_MKLOSTFOUND_TARGET_BINARY) \
			$($(PKG)_TUNE2FS_TARGET_BINARY) \
			$($(PKG)_DUMPE2FS_TARGET_BINARY) \
			$($(PKG)_CHATTR_TARGET_BINARY) \
			$($(PKG)_LSATTR_TARGET_BINARY) \
			$($(PKG)_E2IMAGE_TARGET_BINARY) \
			$($(PKG)_E2UNDO_TARGET_BINARY) \
			$($(PKG)_DEBUGFS_TARGET_BINARY) \
			$($(PKG)_LOGSAVE_TARGET_BINARY) \
			$($(PKG)_BADBLOCKS_TARGET_BINARY) \
			$($(PKG)_FILEFRAG_TARGET_BINARY) \
			$($(PKG)_BLKID_TARGET_BINARY) \
			$($(PKG)_UUIDD_TARGET_BINARY) \
			$($(PKG)_UUIDGEN_TARGET_BINARY) \
			$($(PKG)_BLKID_LIB_STAGING_BINARY) \
			$($(PKG)_UUID_LIB_STAGING_BINARY)

$(pkg)-clean:
	-$(SUBMAKE) -C $(E2FSPROGS_DIR) clean

$(pkg)-uninstall:
	$(RM) $(E2FSPROGS_E2FSCK_TARGET_BINARY) \
		$(E2FSPROGS_MKE2FS_TARGET_BINARY) \
		$(E2FSPROGS_MKLOSTFOUND_TARGET_BINARY) \
		$(E2FSPROGS_TUNE2FS_TARGET_BINARY) \
		$(E2FSPROGS_DUMPE2FS_TARGET_BINARY) \
		$(E2FSPROGS_CHATTR_TARGET_BINARY) \
		$(E2FSPROGS_LSATTR_TARGET_BINARY) \
		$(E2FSPROGS_E2IMAGE_TARGET_BINARY) \
		$(E2FSPROGS_E2UNDO_TARGET_BINARY) \
		$(E2FSPROGS_DEBUGFS_TARGET_BINARY) \
		$(E2FSPROGS_LOGSAVE_TARGET_BINARY) \
		$(E2FSPROGS_BADBLOCKS_TARGET_BINARY) \
		$(E2FSPROGS_FILEFRAG_TARGET_BINARY) \
		$(E2FSPROGS_BLKID_TARGET_BINARY) \
		$(E2FSPROGS_UUIDD_TARGET_BINARY) \
		$(E2FSPROGS_UUIDGEN_TARGET_BINARY) \
		$(E2FSPROGS_BLKID_LIB_STAGING_BINARY) \
		$(E2FSPROGS_UUID_LIB_STAGING_BINARY)

$(PKG_FINISH)
