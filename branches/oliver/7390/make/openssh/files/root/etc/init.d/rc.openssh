#!/bin/sh

DAEMON=openssh
DAEMON_LONG_NAME="openssh SSH server"
CONFFILE=/mod/etc/sshd_conf

. /etc/init.d/modlibrc

pre_config() {
	mkdir /tmp/openssh
	modlib_addgroup sshd
	modlib_adduser sshd -G sshd -s /bin/false -H -D -h /tmp/openssh -g "sshd account"
	config
}

gen_key() {
	rm -f "$1"
	rm -f "$1.pub"
	echo "Creating host key $(basename $1)"
	if [ ! -e /usr/bin/ssh-keygen ]; then
		echo "Error[$DAEMON]: Can't generate key. Please include openssh keyutils to your image or provide public and private $2 host keys via Web Interface!"
		exit 1
	fi
	/usr/bin/ssh-keygen -q -t $2 -f "$1" -N ""
}

check_key_file() {
	if [ -e "$1" ]; then
		grep -q "[a-zA-Z0-9]" $1 && return
	fi
	gen_key "$1" "$2"
	chmod 600 $1
	/usr/bin/modsave flash
}

config() {
	[ -d "/tmp/flash/.ssh" ] && mv /tmp/flash/.ssh /tmp/flash/openssh
	[ -d /openssh ] || mkdir -p /tmp/flash/openssh
	[ -d /var/empty ] || mkdir -p /var/empty
	[ -e /tmp/flash/rsa_host_key ] && mv /tmp/flash/rsa_host_key /tmp/flash/openssh/rsa_host_key
	[ -e /tmp/flash/dsa_host_key ] && mv /tmp/flash/dsa_host_key /tmp/flash/openssh/dsa_host_key
	[ -e /tmp/flash/host_key ] && mv /tmp/flash/host_key /tmp/flash/openssh/host_key

	check_key_file "/tmp/flash/openssh/rsa_host_key" "rsa"
	check_key_file "/tmp/flash/openssh/dsa_host_key" "dsa"

	if [ ! -d "/mod/etc/ssh" ]; then
		mkdir -p /mod/etc/ssh
		ln -s /tmp/flash/openssh/rsa_host_key /mod/etc/ssh/rsa_host_key
		ln -s /tmp/flash/openssh/dsa_host_key /mod/etc/ssh/dsa_host_key
	fi
}

start() {
	config

	echo "$OPENSSH_SETTINGS" > $CONFFILE
	if [ "$OPENSSH_PWDAUTH" = "yes" ]; then
		if cat /etc/shadow | grep -q '^root:[*!]:'; then
			echo "Error[$DAEMON]: no root password set - run 'passwd root'" 1>&2
			exit 1
		fi
		echo "PasswordAuthentication yes" >> $CONFFILE
	else
		echo "PasswordAuthentication no" >> $CONFFILE
	fi
	if [ "$OPENSSH_ROOT" = "yes" ]; then
		echo "PermitRootLogin yes" >> $CONFFILE
	else
		echo "PermitRootLogin no" >> $CONFFILE
	fi

	echo -n "Starting $DAEMON_LONG_NAME..."
	if modlib_check_running; then
		echo 'already running.'
		exit 0
	fi

	set -o noglob
	modlib_startdaemon /usr/sbin/sshd -p "$OPENSSH_PORT" -f $CONFFILE $OPENSSH_OPTIONS
	exitval=$?
	if [ "$exitval" -eq 0 ]; then
		echo 'done.'
	else
		echo 'failed.'
		exit $exitval
	fi
}

stop() {
	if [ ! -z "$(pidof sshd)" ];then
		echo -n "Stopping ${DAEMON} ... "
		killall sshd > /dev/null 2>&1
		exitval=$?
		if [ "$exitval" -eq 0 ]; then
			echo 'done.'
		else
			echo 'failed.'
			exit $exitval
		fi
	fi
}

reg_files() {
	for i in $@; do
		modreg file openssh "$i" "OpenSSH: $i" 0 "$i"
	done
}

case $1 in
	""|load)
		modreg cgi 'openssh' 'OpenSSH sshd'
		reg_files rsa_key dsa_key

		pre_config

		if [ "$OPENSSH_ENABLED" != "yes" ]; then
			echo "OpenSSH $DAEMON is disabled" 1>&2
			exit 1
		fi

		start
		;;
	unload)
		stop
		modunreg file openssh
		modunreg cgi openssh
		;;
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		sleep 1
		start
		;;
	status)
		if [ -z "$(pidof sshd)" ]; then
			echo 'stopped'
		else
			echo 'running'
		fi
		;;
	*)
		echo "Usage: $0 [load|unload|start|stop|restart|status]" 1>&2
		exit 1
		;;
esac

exit 0
