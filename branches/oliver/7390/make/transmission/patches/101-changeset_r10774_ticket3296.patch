Index: libtransmission/torrent.h
===================================================================
--- libtransmission/torrent.h	(revision 10664)
+++ libtransmission/torrent.h	(revision 10774)
@@ -166,8 +166,11 @@
     char * incompleteDir;
 
-    /* Length, in bytes, of the "info" dict in the .torrent file */
+    /* Length, in bytes, of the "info" dict in the .torrent file. */
     int infoDictLength;
 
-    /* Offset, in bytes, of the beginning of the "info" dict in the .torrent file */
+    /* Offset, in bytes, of the beginning of the "info" dict in the .torrent file.
+     *
+     * Used by the torrent-magnet code for serving metainfo to peers.
+     * This field is lazy-generated and might not be initialized yet. */
     int infoDictOffset;
 
@@ -232,4 +235,6 @@
     tr_bool                    startAfterVerify;
     tr_bool                    isDirty;
+
+    tr_bool                    infoDictOffsetIsCached;
 
     uint16_t                   maxConnectedPeers;
Index: libtransmission/metainfo.c
===================================================================
--- libtransmission/metainfo.c	(revision 10502)
+++ libtransmission/metainfo.c	(revision 10774)
@@ -403,5 +403,4 @@
                       tr_info           * inf,
                       tr_bool           * hasInfoDict,
-                      int               * infoDictOffset,
                       int               * infoDictLength,
                       const tr_benc     * meta_in )
@@ -461,16 +460,4 @@
         if( infoDictLength != NULL )
             *infoDictLength = len;
-
-        if( infoDictOffset != NULL )
-        {
-            int mlen = 0;
-            char * mstr = tr_bencToStr( meta_in, TR_FMT_BENC, &mlen );
-            const char * offset = tr_memmem( mstr, mlen, bstr, len );
-            if( offset != NULL )
-                *infoDictOffset = offset - mstr;
-            tr_free( mstr );
-            if( offset == NULL )
-                return "info";
-        }
 
         tr_free( bstr );
@@ -564,5 +551,4 @@
                   tr_info          * inf,
                   tr_bool          * hasInfoDict,
-                  int              * infoDictOffset,
                   int              * infoDictLength )
 {
@@ -570,5 +556,4 @@
                                                 inf,
                                                 hasInfoDict,
-                                                infoDictOffset,
                                                 infoDictLength,
                                                 meta_in );
Index: libtransmission/metainfo.h
===================================================================
--- libtransmission/metainfo.h	(revision 10502)
+++ libtransmission/metainfo.h	(revision 10774)
@@ -26,5 +26,4 @@
                            tr_info              * setmeInfo,
                            tr_bool              * setmeHasInfoDict,
-                           int                  * setmeInfoDictOffset,
                            int                  * setmeInfoDictLength );
 
Index: libtransmission/torrent-magnet.c
===================================================================
--- libtransmission/torrent-magnet.c	(revision 10641)
+++ libtransmission/torrent-magnet.c	(revision 10774)
@@ -96,6 +96,52 @@
 }
 
+static int
+findInfoDictOffset( const tr_torrent * tor )
+{
+    size_t fileLen;
+    uint8_t * fileContents;
+    int offset = 0;
+
+    /* load the file, and find the info dict's offset inside the file */
+    if(( fileContents = tr_loadFile( tor->info.torrent, &fileLen )))
+    {
+        tr_benc top;
+
+        if( !tr_bencParse( fileContents, fileContents + fileLen, &top, NULL ) )
+        {
+            tr_benc * infoDict;
+
+            if( tr_bencDictFindDict( &top, "info", &infoDict ) )
+            {
+                int infoLen;
+                char * infoContents = tr_bencToStr( infoDict, TR_FMT_BENC, &infoLen );
+                const uint8_t * i = (const uint8_t*) tr_memmem( (char*)fileContents, fileLen, infoContents, infoLen );
+                offset = i == NULL ? i - fileContents : 0;
+                tr_free( infoContents );
+            }
+
+            tr_bencFree( &top );
+        }
+
+        tr_free( fileContents );
+    }
+
+    return offset;
+}
+
+static void
+ensureInfoDictOffsetIsCached( tr_torrent * tor )
+{
+    assert( tr_torrentHasMetadata( tor ) );
+
+    if( !tor->infoDictOffsetIsCached )
+    {
+        tor->infoDictOffset = findInfoDictOffset( tor );
+        tor->infoDictOffsetIsCached = TRUE;
+    }
+}
+
 void*
-tr_torrentGetMetadataPiece( const tr_torrent * tor, int piece, int * len )
+tr_torrentGetMetadataPiece( tr_torrent * tor, int piece, int * len )
 {
     char * ret = NULL;
@@ -105,7 +151,14 @@
     assert( len != NULL );
 
-    if( tor->infoDictLength > 0 )
-    {
-        FILE * fp = fopen( tor->info.torrent, "rb" );
+    if( tr_torrentHasMetadata( tor ) )
+    {
+        FILE * fp;
+
+        ensureInfoDictOffsetIsCached( tor );
+
+        assert( tor->infoDictLength > 0 );
+        assert( tor->infoDictOffset >= 0 );
+
+        fp = fopen( tor->info.torrent, "rb" );
         if( fp != NULL )
         {
@@ -209,6 +262,5 @@
                     tr_bencMergeDicts( tr_bencDictAddDict( &newMetainfo, "info", 0 ), &infoDict );
 
-                    success = tr_metainfoParse( tor->session, &newMetainfo, &tor->info,
-                                                &hasInfo, &tor->infoDictOffset, &tor->infoDictLength );
+                    success = tr_metainfoParse( tor->session, &newMetainfo, &tor->info, &hasInfo, &tor->infoDictLength );
 
                     assert( hasInfo );
Index: libtransmission/torrent-magnet.h
===================================================================
--- libtransmission/torrent-magnet.h	(revision 9868)
+++ libtransmission/torrent-magnet.h	(revision 10774)
@@ -26,5 +26,5 @@
 };
 
-void* tr_torrentGetMetadataPiece( const tr_torrent * tor, int piece, int * len );
+void* tr_torrentGetMetadataPiece( tr_torrent * tor, int piece, int * len );
 
 void tr_torrentSetMetadataPiece( tr_torrent * tor, int piece, const void * data, int len );
Index: libtransmission/torrent.c
===================================================================
--- libtransmission/torrent.c	(revision 10736)
+++ libtransmission/torrent.c	(revision 10774)
@@ -738,5 +738,5 @@
 static tr_parse_result
 torrentParseImpl( const tr_ctor * ctor, tr_info * setmeInfo,
-                  tr_bool * setmeHasInfo, int * dictOffset, int * dictLength )
+                  tr_bool * setmeHasInfo, int * dictLength )
 {
     int             doFree;
@@ -756,5 +756,5 @@
 
     didParse = tr_metainfoParse( session, metainfo, setmeInfo,
-                                 &hasInfo, dictOffset, dictLength );
+                                 &hasInfo, dictLength );
     doFree = didParse && ( setmeInfo == &tmp );
 
@@ -780,5 +780,5 @@
 tr_torrentParse( const tr_ctor * ctor, tr_info * setmeInfo )
 {
-    return torrentParseImpl( ctor, setmeInfo, NULL, NULL, NULL );
+    return torrentParseImpl( ctor, setmeInfo, NULL, NULL );
 }
 
@@ -786,5 +786,5 @@
 tr_torrentNew( const tr_ctor * ctor, int * setmeError )
 {
-    int off, len;
+    int len;
     tr_bool hasInfo;
     tr_info tmpInfo;
@@ -795,5 +795,5 @@
     assert( tr_isSession( tr_ctorGetSession( ctor ) ) );
 
-    r = torrentParseImpl( ctor, &tmpInfo, &hasInfo, &off, &len );
+    r = torrentParseImpl( ctor, &tmpInfo, &hasInfo, &len );
     if( r == TR_PARSE_OK )
     {
@@ -801,8 +801,5 @@
         tor->info = tmpInfo;
         if( hasInfo )
-        {
-            tor->infoDictOffset = off;
             tor->infoDictLength = len;
-        }
         torrentInit( tor, ctor );
     }
@@ -2196,5 +2193,5 @@
         memset( &tmpInfo, 0, sizeof( tr_info ) );
         if( tr_metainfoParse( tor->session, &metainfo, &tmpInfo,
-                              &hasInfo, &tor->infoDictOffset, &tor->infoDictLength ) )
+                              &hasInfo, &tor->infoDictLength ) )
         {
             /* it's good, so keep these new trackers and free the old ones */
